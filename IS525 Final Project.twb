<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.25.0208.0338                               -->
<workbook original-version='18.1' source-build='2024.3.4 (20243.25.0208.0338)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Select Metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Temperature&quot;'>
        <calculation class='tableau' formula='&quot;Temperature&quot;' />
        <members>
          <member value='&quot;Temperature&quot;' />
          <member value='&quot;Humidity&quot;' />
          <member value='&quot;Wind Speed&quot;' />
          <member value='&quot;Visibility&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='df_final' inline='true' name='federated.1m7q2mx0lzi0xx1b2bpca0spt2mc' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_final' name='textscan.16z3jf01mbpkpl1g0sd8n1l7yxro'>
            <connection class='textscan' directory='C:/Users/Sara Kiel/PycharmProjects/IS525-Final-Project' filename='df_final.csv' password='' server='' />
          </named-connection>
          <named-connection caption='humidity_df' name='textscan.186qgkf0038yyz0zvuup30ds1w20'>
            <connection class='textscan' directory='C:/Users/Sara Kiel/PycharmProjects/IS525-Final-Project' filename='humidity_df.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='full' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[df_final.csv].[DATE]' />
              <expression op='[humidity_df.csv].[DATE]' />
            </expression>
          </clause>
          <relation connection='textscan.16z3jf01mbpkpl1g0sd8n1l7yxro' name='df_final.csv' table='[C:\Users\Sara Kiel\PycharmProjects\IS525-Final-Project\df_final#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='DATE' ordinal='0' />
              <column datatype='real' name='TEMP' ordinal='1' />
              <column datatype='integer' name='TEMP_ATTRIBUTES' ordinal='2' />
              <column datatype='real' name='DEWP' ordinal='3' />
              <column datatype='integer' name='DEWP_ATTRIBUTES' ordinal='4' />
              <column datatype='real' name='SLP' ordinal='5' />
              <column datatype='integer' name='SLP_ATTRIBUTES' ordinal='6' />
              <column datatype='real' name='STP' ordinal='7' />
              <column datatype='integer' name='STP_ATTRIBUTES' ordinal='8' />
              <column datatype='real' name='VISIB' ordinal='9' />
              <column datatype='integer' name='VISIB_ATTRIBUTES' ordinal='10' />
              <column datatype='real' name='WDSP' ordinal='11' />
              <column datatype='integer' name='WDSP_ATTRIBUTES' ordinal='12' />
              <column datatype='real' name='MXSPD' ordinal='13' />
              <column datatype='real' name='GUST' ordinal='14' />
              <column datatype='real' name='MAX' ordinal='15' />
              <column datatype='string' name='MAX_ATTRIBUTES' ordinal='16' />
              <column datatype='real' name='MIN' ordinal='17' />
              <column datatype='string' name='MIN_ATTRIBUTES' ordinal='18' />
              <column datatype='real' name='PRCP' ordinal='19' />
              <column datatype='string' name='PRCP_ATTRIBUTES' ordinal='20' />
              <column datatype='real' name='SNDP' ordinal='21' />
              <column datatype='integer' name='FRSHTT' ordinal='22' />
              <column datatype='integer' name='YEAR' ordinal='23' />
              <column datatype='integer' name='Month' ordinal='24' />
              <column datatype='string' name='Season' ordinal='25' />
            </columns>
          </relation>
          <relation connection='textscan.186qgkf0038yyz0zvuup30ds1w20' name='humidity_df.csv' table='[humidity_df#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='DATE' ordinal='0' />
              <column datatype='real' name='DailyAverageRelativeHumidity' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[DATE (humidity_df.csv)]' value='[humidity_df.csv].[DATE]' />
          <map key='[DATE]' value='[df_final.csv].[DATE]' />
          <map key='[DEWP]' value='[df_final.csv].[DEWP]' />
          <map key='[DEWP_ATTRIBUTES]' value='[df_final.csv].[DEWP_ATTRIBUTES]' />
          <map key='[DailyAverageRelativeHumidity]' value='[humidity_df.csv].[DailyAverageRelativeHumidity]' />
          <map key='[FRSHTT]' value='[df_final.csv].[FRSHTT]' />
          <map key='[GUST]' value='[df_final.csv].[GUST]' />
          <map key='[MAX]' value='[df_final.csv].[MAX]' />
          <map key='[MAX_ATTRIBUTES]' value='[df_final.csv].[MAX_ATTRIBUTES]' />
          <map key='[MIN]' value='[df_final.csv].[MIN]' />
          <map key='[MIN_ATTRIBUTES]' value='[df_final.csv].[MIN_ATTRIBUTES]' />
          <map key='[MXSPD]' value='[df_final.csv].[MXSPD]' />
          <map key='[Month]' value='[df_final.csv].[Month]' />
          <map key='[PRCP]' value='[df_final.csv].[PRCP]' />
          <map key='[PRCP_ATTRIBUTES]' value='[df_final.csv].[PRCP_ATTRIBUTES]' />
          <map key='[SLP]' value='[df_final.csv].[SLP]' />
          <map key='[SLP_ATTRIBUTES]' value='[df_final.csv].[SLP_ATTRIBUTES]' />
          <map key='[SNDP]' value='[df_final.csv].[SNDP]' />
          <map key='[STP]' value='[df_final.csv].[STP]' />
          <map key='[STP_ATTRIBUTES]' value='[df_final.csv].[STP_ATTRIBUTES]' />
          <map key='[Season]' value='[df_final.csv].[Season]' />
          <map key='[TEMP]' value='[df_final.csv].[TEMP]' />
          <map key='[TEMP_ATTRIBUTES]' value='[df_final.csv].[TEMP_ATTRIBUTES]' />
          <map key='[VISIB]' value='[df_final.csv].[VISIB]' />
          <map key='[VISIB_ATTRIBUTES]' value='[df_final.csv].[VISIB_ATTRIBUTES]' />
          <map key='[WDSP]' value='[df_final.csv].[WDSP]' />
          <map key='[WDSP_ATTRIBUTES]' value='[df_final.csv].[WDSP_ATTRIBUTES]' />
          <map key='[YEAR]' value='[df_final.csv].[YEAR]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[df_final.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[humidity_df.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DATE</remote-name>
            <remote-type>133</remote-type>
            <local-name>[DATE]</local-name>
            <parent-name>[df_final.csv]</parent-name>
            <remote-alias>DATE</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_final.csv_66CEB05AC5304E0ABFFB6381C65C2F8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TEMP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TEMP]</local-name>
            <parent-name>[df_final.csv]</parent-name>
            <remote-alias>TEMP</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_final.csv_66CEB05AC5304E0ABFFB6381C65C2F8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TEMP_ATTRIBUTES</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TEMP_ATTRIBUTES]</local-name>
            <parent-name>[df_final.csv]</parent-name>
            <remote-alias>TEMP_ATTRIBUTES</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_final.csv_66CEB05AC5304E0ABFFB6381C65C2F8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEWP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DEWP]</local-name>
            <parent-name>[df_final.csv]</parent-name>
            <remote-alias>DEWP</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_final.csv_66CEB05AC5304E0ABFFB6381C65C2F8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEWP_ATTRIBUTES</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DEWP_ATTRIBUTES]</local-name>
            <parent-name>[df_final.csv]</parent-name>
            <remote-alias>DEWP_ATTRIBUTES</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_final.csv_66CEB05AC5304E0ABFFB6381C65C2F8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SLP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SLP]</local-name>
            <parent-name>[df_final.csv]</parent-name>
            <remote-alias>SLP</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_final.csv_66CEB05AC5304E0ABFFB6381C65C2F8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SLP_ATTRIBUTES</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SLP_ATTRIBUTES]</local-name>
            <parent-name>[df_final.csv]</parent-name>
            <remote-alias>SLP_ATTRIBUTES</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_final.csv_66CEB05AC5304E0ABFFB6381C65C2F8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[STP]</local-name>
            <parent-name>[df_final.csv]</parent-name>
            <remote-alias>STP</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_final.csv_66CEB05AC5304E0ABFFB6381C65C2F8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STP_ATTRIBUTES</remote-name>
            <remote-type>20</remote-type>
            <local-name>[STP_ATTRIBUTES]</local-name>
            <parent-name>[df_final.csv]</parent-name>
            <remote-alias>STP_ATTRIBUTES</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_final.csv_66CEB05AC5304E0ABFFB6381C65C2F8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VISIB</remote-name>
            <remote-type>5</remote-type>
            <local-name>[VISIB]</local-name>
            <parent-name>[df_final.csv]</parent-name>
            <remote-alias>VISIB</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_final.csv_66CEB05AC5304E0ABFFB6381C65C2F8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VISIB_ATTRIBUTES</remote-name>
            <remote-type>20</remote-type>
            <local-name>[VISIB_ATTRIBUTES]</local-name>
            <parent-name>[df_final.csv]</parent-name>
            <remote-alias>VISIB_ATTRIBUTES</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_final.csv_66CEB05AC5304E0ABFFB6381C65C2F8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WDSP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[WDSP]</local-name>
            <parent-name>[df_final.csv]</parent-name>
            <remote-alias>WDSP</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_final.csv_66CEB05AC5304E0ABFFB6381C65C2F8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WDSP_ATTRIBUTES</remote-name>
            <remote-type>20</remote-type>
            <local-name>[WDSP_ATTRIBUTES]</local-name>
            <parent-name>[df_final.csv]</parent-name>
            <remote-alias>WDSP_ATTRIBUTES</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_final.csv_66CEB05AC5304E0ABFFB6381C65C2F8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MXSPD</remote-name>
            <remote-type>5</remote-type>
            <local-name>[MXSPD]</local-name>
            <parent-name>[df_final.csv]</parent-name>
            <remote-alias>MXSPD</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_final.csv_66CEB05AC5304E0ABFFB6381C65C2F8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GUST</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GUST]</local-name>
            <parent-name>[df_final.csv]</parent-name>
            <remote-alias>GUST</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_final.csv_66CEB05AC5304E0ABFFB6381C65C2F8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MAX</remote-name>
            <remote-type>5</remote-type>
            <local-name>[MAX]</local-name>
            <parent-name>[df_final.csv]</parent-name>
            <remote-alias>MAX</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_final.csv_66CEB05AC5304E0ABFFB6381C65C2F8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MAX_ATTRIBUTES</remote-name>
            <remote-type>129</remote-type>
            <local-name>[MAX_ATTRIBUTES]</local-name>
            <parent-name>[df_final.csv]</parent-name>
            <remote-alias>MAX_ATTRIBUTES</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[df_final.csv_66CEB05AC5304E0ABFFB6381C65C2F8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MIN</remote-name>
            <remote-type>5</remote-type>
            <local-name>[MIN]</local-name>
            <parent-name>[df_final.csv]</parent-name>
            <remote-alias>MIN</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_final.csv_66CEB05AC5304E0ABFFB6381C65C2F8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MIN_ATTRIBUTES</remote-name>
            <remote-type>129</remote-type>
            <local-name>[MIN_ATTRIBUTES]</local-name>
            <parent-name>[df_final.csv]</parent-name>
            <remote-alias>MIN_ATTRIBUTES</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[df_final.csv_66CEB05AC5304E0ABFFB6381C65C2F8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PRCP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PRCP]</local-name>
            <parent-name>[df_final.csv]</parent-name>
            <remote-alias>PRCP</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_final.csv_66CEB05AC5304E0ABFFB6381C65C2F8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PRCP_ATTRIBUTES</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PRCP_ATTRIBUTES]</local-name>
            <parent-name>[df_final.csv]</parent-name>
            <remote-alias>PRCP_ATTRIBUTES</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[df_final.csv_66CEB05AC5304E0ABFFB6381C65C2F8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SNDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SNDP]</local-name>
            <parent-name>[df_final.csv]</parent-name>
            <remote-alias>SNDP</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_final.csv_66CEB05AC5304E0ABFFB6381C65C2F8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FRSHTT</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FRSHTT]</local-name>
            <parent-name>[df_final.csv]</parent-name>
            <remote-alias>FRSHTT</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_final.csv_66CEB05AC5304E0ABFFB6381C65C2F8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YEAR</remote-name>
            <remote-type>20</remote-type>
            <local-name>[YEAR]</local-name>
            <parent-name>[df_final.csv]</parent-name>
            <remote-alias>YEAR</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_final.csv_66CEB05AC5304E0ABFFB6381C65C2F8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[df_final.csv]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_final.csv_66CEB05AC5304E0ABFFB6381C65C2F8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Season</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Season]</local-name>
            <parent-name>[df_final.csv]</parent-name>
            <remote-alias>Season</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[df_final.csv_66CEB05AC5304E0ABFFB6381C65C2F8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DATE</remote-name>
            <remote-type>133</remote-type>
            <local-name>[DATE (humidity_df.csv)]</local-name>
            <parent-name>[humidity_df.csv]</parent-name>
            <remote-alias>DATE</remote-alias>
            <ordinal>26</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_final.csv_66CEB05AC5304E0ABFFB6381C65C2F8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DailyAverageRelativeHumidity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DailyAverageRelativeHumidity]</local-name>
            <parent-name>[humidity_df.csv]</parent-name>
            <remote-alias>DailyAverageRelativeHumidity</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_final.csv_66CEB05AC5304E0ABFFB6381C65C2F8F]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='dayofyear' datatype='date' name='[Calculation_1874623353872187392]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATE(&quot;2000-&quot; + STR(DATEPART(&apos;month&apos;, [DATE])) + &quot;-&quot; + STR(DATEPART(&apos;day&apos;, [DATE]))))' />
      </column>
      <column caption='Day MM/DD' datatype='string' name='[Calculation_1874623353873625089]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='STR(DATEPART(&apos;month&apos;, [DATE])) + &quot;/&quot; + STR(DATEPART(&apos;day&apos;, [DATE]))' />
      </column>
      <column caption='Remaining' datatype='real' name='[Calculation_1874623353880027139]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1 - [DailyAverageRelativeHumidity]' />
      </column>
      <column caption='Selected Metric Value' datatype='real' name='[Calculation_1874623353954476050]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Temperature&quot; THEN AVG([TEMP])&#13;&#10;WHEN &quot;Humidity&quot; THEN AVG([DailyAverageRelativeHumidity])&#13;&#10;WHEN &quot;Wind Speed&quot; THEN AVG([WDSP])&#13;&#10;When &quot;Visibility&quot; THEN AVG([VISIB])&#13;&#10;END' />
      </column>
      <column caption='DATE (humidity df.csv)' datatype='date' name='[DATE (humidity_df.csv)]' role='dimension' type='ordinal' />
      <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
      <column caption='Dewp' datatype='real' name='[DEWP]' role='measure' type='quantitative' />
      <column caption='Dewp Attributes' datatype='integer' name='[DEWP_ATTRIBUTES]' role='measure' type='quantitative' />
      <column caption='Humidity' datatype='real' name='[DailyAverageRelativeHumidity]' role='measure' type='quantitative' />
      <column caption='Frshtt' datatype='integer' name='[FRSHTT]' role='measure' type='quantitative' />
      <column caption='Gust' datatype='real' name='[GUST]' role='measure' type='quantitative' />
      <column caption='Max Attributes' datatype='string' name='[MAX_ATTRIBUTES]' role='dimension' type='nominal' />
      <column caption='Min Attributes' datatype='string' name='[MIN_ATTRIBUTES]' role='dimension' type='nominal' />
      <column caption='Mxspd' datatype='real' name='[MXSPD]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
      <column caption='Prcp' datatype='real' name='[PRCP]' role='measure' type='quantitative' />
      <column caption='Prcp Attributes' datatype='string' name='[PRCP_ATTRIBUTES]' role='dimension' type='nominal' />
      <column caption='Slp Attributes' datatype='integer' name='[SLP_ATTRIBUTES]' role='measure' type='quantitative' />
      <column caption='Sndp' datatype='real' name='[SNDP]' role='measure' type='quantitative' />
      <column caption='Stp Attributes' datatype='integer' name='[STP_ATTRIBUTES]' role='measure' type='quantitative' />
      <column caption='Temp' datatype='real' name='[TEMP]' role='measure' type='quantitative' />
      <column caption='Temp Attributes' datatype='integer' name='[TEMP_ATTRIBUTES]' role='measure' type='quantitative' />
      <column caption='Visib' datatype='real' name='[VISIB]' role='measure' type='quantitative' />
      <column caption='Visib Attributes' datatype='integer' name='[VISIB_ATTRIBUTES]' role='measure' type='quantitative' />
      <column caption='Wdsp' datatype='real' name='[WDSP]' role='measure' type='quantitative' />
      <column caption='Wdsp Attributes' datatype='integer' name='[WDSP_ATTRIBUTES]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[YEAR]' role='dimension' type='quantitative' />
      <column caption='df_final.csv' datatype='table' name='[__tableau_internal_object_id__].[df_final.csv_66CEB05AC5304E0ABFFB6381C65C2F8F]' role='measure' type='quantitative' />
      <layout common-percentage='0.945364' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.0546358' show-structure='true' user-set-layout-v2='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select Metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Temperature&quot;'>
          <calculation class='tableau' formula='&quot;Temperature&quot;' />
        </column>
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='df_final.csv' id='df_final.csv_66CEB05AC5304E0ABFFB6381C65C2F8F'>
            <properties context=''>
              <relation join='full' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[df_final.csv].[DATE]' />
                    <expression op='[humidity_df.csv].[DATE]' />
                  </expression>
                </clause>
                <relation connection='textscan.16z3jf01mbpkpl1g0sd8n1l7yxro' name='df_final.csv' table='[C:\Users\Sara Kiel\PycharmProjects\IS525-Final-Project\df_final#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='date' name='DATE' ordinal='0' />
                    <column datatype='real' name='TEMP' ordinal='1' />
                    <column datatype='integer' name='TEMP_ATTRIBUTES' ordinal='2' />
                    <column datatype='real' name='DEWP' ordinal='3' />
                    <column datatype='integer' name='DEWP_ATTRIBUTES' ordinal='4' />
                    <column datatype='real' name='SLP' ordinal='5' />
                    <column datatype='integer' name='SLP_ATTRIBUTES' ordinal='6' />
                    <column datatype='real' name='STP' ordinal='7' />
                    <column datatype='integer' name='STP_ATTRIBUTES' ordinal='8' />
                    <column datatype='real' name='VISIB' ordinal='9' />
                    <column datatype='integer' name='VISIB_ATTRIBUTES' ordinal='10' />
                    <column datatype='real' name='WDSP' ordinal='11' />
                    <column datatype='integer' name='WDSP_ATTRIBUTES' ordinal='12' />
                    <column datatype='real' name='MXSPD' ordinal='13' />
                    <column datatype='real' name='GUST' ordinal='14' />
                    <column datatype='real' name='MAX' ordinal='15' />
                    <column datatype='string' name='MAX_ATTRIBUTES' ordinal='16' />
                    <column datatype='real' name='MIN' ordinal='17' />
                    <column datatype='string' name='MIN_ATTRIBUTES' ordinal='18' />
                    <column datatype='real' name='PRCP' ordinal='19' />
                    <column datatype='string' name='PRCP_ATTRIBUTES' ordinal='20' />
                    <column datatype='real' name='SNDP' ordinal='21' />
                    <column datatype='integer' name='FRSHTT' ordinal='22' />
                    <column datatype='integer' name='YEAR' ordinal='23' />
                    <column datatype='integer' name='Month' ordinal='24' />
                    <column datatype='string' name='Season' ordinal='25' />
                  </columns>
                </relation>
                <relation connection='textscan.186qgkf0038yyz0zvuup30ds1w20' name='humidity_df.csv' table='[humidity_df#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='date' name='DATE' ordinal='0' />
                    <column datatype='real' name='DailyAverageRelativeHumidity' ordinal='1' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='humidity_model_predictions' inline='true' name='federated.0jx8i9j1b9965t12hmf3u1t1mvbx' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='humidity_model_predictions' name='textscan.09o3337190spz614q4t140mu4i3t'>
            <connection class='textscan' directory='C:/Users/Sara Kiel/PycharmProjects/IS525-Final-Project' filename='humidity_model_predictions.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.09o3337190spz614q4t140mu4i3t' name='humidity_model_predictions.csv' table='[humidity_model_predictions#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Model' ordinal='0' />
            <column datatype='real' name='Real_Humidity' ordinal='1' />
            <column datatype='real' name='Predicted_Humidity' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[humidity_model_predictions.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Model</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Model]</local-name>
            <parent-name>[humidity_model_predictions.csv]</parent-name>
            <remote-alias>Model</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[humidity_model_predictions.csv_D49192DE62A646EA9E6C44DDDA59ECE5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Real_Humidity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Real_Humidity]</local-name>
            <parent-name>[humidity_model_predictions.csv]</parent-name>
            <remote-alias>Real_Humidity</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[humidity_model_predictions.csv_D49192DE62A646EA9E6C44DDDA59ECE5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Predicted_Humidity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Predicted_Humidity]</local-name>
            <parent-name>[humidity_model_predictions.csv]</parent-name>
            <remote-alias>Predicted_Humidity</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[humidity_model_predictions.csv_D49192DE62A646EA9E6C44DDDA59ECE5]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Predicted Humidity' datatype='real' name='[Predicted_Humidity]' role='measure' type='quantitative' />
      <column caption='Real Humidity' datatype='real' name='[Real_Humidity]' role='measure' type='quantitative' />
      <column caption='humidity_model_predictions.csv' datatype='table' name='[__tableau_internal_object_id__].[humidity_model_predictions.csv_D49192DE62A646EA9E6C44DDDA59ECE5]' role='measure' type='quantitative' />
      <column-instance column='[Predicted_Humidity]' derivation='Attribute' name='[attr:Predicted_Humidity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Predicted_Humidity]' derivation='Avg' name='[avg:Predicted_Humidity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Real_Humidity]' derivation='Avg' name='[avg:Real_Humidity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Predicted_Humidity]' derivation='None' name='[none:Predicted_Humidity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Real_Humidity]' derivation='None' name='[none:Real_Humidity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Predicted_Humidity]' derivation='Sum' name='[sum:Predicted_Humidity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Real_Humidity]' derivation='Sum' name='[sum:Real_Humidity:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0jx8i9j1b9965t12hmf3u1t1mvbx].[attr:Predicted_Humidity:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0jx8i9j1b9965t12hmf3u1t1mvbx].[avg:Predicted_Humidity:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0jx8i9j1b9965t12hmf3u1t1mvbx].[none:Predicted_Humidity:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0jx8i9j1b9965t12hmf3u1t1mvbx].[sum:Predicted_Humidity:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0jx8i9j1b9965t12hmf3u1t1mvbx]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0jx8i9j1b9965t12hmf3u1t1mvbx].[avg:Real_Humidity:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0jx8i9j1b9965t12hmf3u1t1mvbx].[none:Real_Humidity:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0jx8i9j1b9965t12hmf3u1t1mvbx].[sum:Real_Humidity:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='humidity_model_predictions.csv' id='humidity_model_predictions.csv_D49192DE62A646EA9E6C44DDDA59ECE5'>
            <properties context=''>
              <relation connection='textscan.09o3337190spz614q4t140mu4i3t' name='humidity_model_predictions.csv' table='[humidity_model_predictions#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Model' ordinal='0' />
                  <column datatype='real' name='Real_Humidity' ordinal='1' />
                  <column datatype='real' name='Predicted_Humidity' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='rain_forecast' inline='true' name='federated.0pxxgqo13sf05u0zntxly1ws3b45' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='rain_forecast' name='textscan.1spgxwh136olwo1djryv51cn1ad8'>
            <connection class='textscan' directory='C:/Users/Sara Kiel/PycharmProjects/IS525-Final-Project' filename='rain_forecast.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1spgxwh136olwo1djryv51cn1ad8' name='rain_forecast.csv' table='[rain_forecast#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='DATE' ordinal='0' />
            <column datatype='real' name='rain_raw_prob' ordinal='1' />
            <column datatype='real' name='rain_blend_prob' ordinal='2' />
            <column datatype='integer' name='pred_rain' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[rain_forecast.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DATE</remote-name>
            <remote-type>133</remote-type>
            <local-name>[DATE]</local-name>
            <parent-name>[rain_forecast.csv]</parent-name>
            <remote-alias>DATE</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[rain_forecast.csv_FCD43FE660814FBA9875979FB6D17219]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rain_raw_prob</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rain_raw_prob]</local-name>
            <parent-name>[rain_forecast.csv]</parent-name>
            <remote-alias>rain_raw_prob</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[rain_forecast.csv_FCD43FE660814FBA9875979FB6D17219]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rain_blend_prob</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rain_blend_prob]</local-name>
            <parent-name>[rain_forecast.csv]</parent-name>
            <remote-alias>rain_blend_prob</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[rain_forecast.csv_FCD43FE660814FBA9875979FB6D17219]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pred_rain</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pred_rain]</local-name>
            <parent-name>[rain_forecast.csv]</parent-name>
            <remote-alias>pred_rain</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[rain_forecast.csv_FCD43FE660814FBA9875979FB6D17219]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Day' datatype='string' name='[Calculation_1874623353940447246]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='DATENAME(&apos;weekday&apos;, [DATE])' />
      </column>
      <column caption='rain-icon' datatype='string' name='[Calculation_1874623353940516879]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [pred_rain] = 1 THEN &quot;🌧️&quot;&#13;&#10;ELSE &quot;🌞️&quot;&#13;&#10;END' />
      </column>
      <column caption='forecast-summary' datatype='string' name='[Calculation_1874623353940688912]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='STR(ROUND([rain_blend_prob] * 100, 0))&#13;&#10;+ &quot;% chance of rain &quot;&#13;&#10;+ IF [pred_rain] = 1 &#13;&#10;    THEN &quot;🌦️ (Prediction: Rain)&quot; &#13;&#10;    ELSE &quot;🌞️ (Prediction: No Rain)&quot; &#13;&#10;  END' />
      </column>
      <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
      <column caption='rain_forecast.csv' datatype='table' name='[__tableau_internal_object_id__].[rain_forecast.csv_FCD43FE660814FBA9875979FB6D17219]' role='measure' type='quantitative' />
      <column caption='Pred Rain' datatype='integer' name='[pred_rain]' role='measure' type='quantitative' />
      <column caption='Rain Blend Prob' datatype='real' name='[rain_blend_prob]' role='measure' type='quantitative' />
      <column caption='Rain Raw Prob' datatype='real' name='[rain_raw_prob]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='rain_forecast.csv' id='rain_forecast.csv_FCD43FE660814FBA9875979FB6D17219'>
            <properties context=''>
              <relation connection='textscan.1spgxwh136olwo1djryv51cn1ad8' name='rain_forecast.csv' table='[rain_forecast#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='DATE' ordinal='0' />
                  <column datatype='real' name='rain_raw_prob' ordinal='1' />
                  <column datatype='real' name='rain_blend_prob' ordinal='2' />
                  <column datatype='integer' name='pred_rain' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='2023 Temp Over Time'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000'>2023 Daily Weather Trend Over Time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_final' name='federated.1m7q2mx0lzi0xx1b2bpca0spt2mc' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Temperature&quot;'>
              <calculation class='tableau' formula='&quot;Temperature&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1m7q2mx0lzi0xx1b2bpca0spt2mc'>
            <column caption='Selected Metric Value' datatype='real' name='[Calculation_1874623353954476050]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Temperature&quot; THEN AVG([TEMP])&#13;&#10;WHEN &quot;Humidity&quot; THEN AVG([DailyAverageRelativeHumidity])&#13;&#10;WHEN &quot;Wind Speed&quot; THEN AVG([WDSP])&#13;&#10;When &quot;Visibility&quot; THEN AVG([VISIB])&#13;&#10;END' />
            </column>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column caption='Humidity' datatype='real' name='[DailyAverageRelativeHumidity]' role='measure' type='quantitative' />
            <column caption='Temp' datatype='real' name='[TEMP]' role='measure' type='quantitative' />
            <column caption='Visib' datatype='real' name='[VISIB]' role='measure' type='quantitative' />
            <column caption='Wdsp' datatype='real' name='[WDSP]' role='measure' type='quantitative' />
            <column-instance column='[DailyAverageRelativeHumidity]' derivation='Avg' name='[avg:DailyAverageRelativeHumidity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[WDSP]' derivation='Avg' name='[avg:WDSP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE]' derivation='None' name='[none:DATE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1874623353954476050]' derivation='User' name='[usr:Calculation_1874623353954476050:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1m7q2mx0lzi0xx1b2bpca0spt2mc].[yr:DATE:ok]'>
            <groupfilter function='member' level='[yr:DATE:ok]' member='2023' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1m7q2mx0lzi0xx1b2bpca0spt2mc].[yr:DATE:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1m7q2mx0lzi0xx1b2bpca0spt2mc].[usr:Calculation_1874623353954476050:qk]' scope='rows' value='Selected Metric Value' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1m7q2mx0lzi0xx1b2bpca0spt2mc].[none:DATE:qk]' value='' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='60.0' field='[federated.1m7q2mx0lzi0xx1b2bpca0spt2mc].[usr:Calculation_1874623353954476050:qk]' palette='red_blue_diverging_10_0' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1m7q2mx0lzi0xx1b2bpca0spt2mc].[usr:Calculation_1874623353954476050:qk]' />
              <tooltip column='[federated.1m7q2mx0lzi0xx1b2bpca0spt2mc].[avg:DailyAverageRelativeHumidity:qk]' />
              <tooltip column='[federated.1m7q2mx0lzi0xx1b2bpca0spt2mc].[avg:WDSP:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1m7q2mx0lzi0xx1b2bpca0spt2mc].[usr:Calculation_1874623353954476050:qk]</rows>
        <cols>[federated.1m7q2mx0lzi0xx1b2bpca0spt2mc].[none:DATE:qk]</cols>
      </table>
      <simple-id uuid='{81CB2A52-A316-46F1-A9FA-95BACEE3DBED}' />
    </worksheet>
    <worksheet name='2023 Total Monthly Rainfall'>
      <layout-options>
        <title>
          <formatted-text>
            <run>2023 Total Monthly Rainfall</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_final' name='federated.1m7q2mx0lzi0xx1b2bpca0spt2mc' />
          </datasources>
          <datasource-dependencies datasource='federated.1m7q2mx0lzi0xx1b2bpca0spt2mc'>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column caption='Prcp' datatype='real' name='[PRCP]' role='measure' type='quantitative' />
            <column-instance column='[DATE]' derivation='Month' name='[mn:DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PRCP]' derivation='Sum' name='[sum:PRCP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1m7q2mx0lzi0xx1b2bpca0spt2mc].[yr:DATE:ok]'>
            <groupfilter function='member' level='[yr:DATE:ok]' member='2023' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1m7q2mx0lzi0xx1b2bpca0spt2mc].[yr:DATE:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1m7q2mx0lzi0xx1b2bpca0spt2mc].[sum:PRCP:qk]' scope='rows' value='Rainfall (Inches)' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1m7q2mx0lzi0xx1b2bpca0spt2mc].[mn:DATE:ok]' value='iLLL' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1m7q2mx0lzi0xx1b2bpca0spt2mc].[sum:PRCP:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#75a1c7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1m7q2mx0lzi0xx1b2bpca0spt2mc].[sum:PRCP:qk]</rows>
        <cols>[federated.1m7q2mx0lzi0xx1b2bpca0spt2mc].[mn:DATE:ok]</cols>
      </table>
      <simple-id uuid='{4B5BBFF1-5C65-4B64-9BC3-FA686BBA754D}' />
    </worksheet>
    <worksheet name='7-Day Weather Forecast'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; 🌞🌧️&#10;</run>
            <run fontsize='11'>Based on model prediction</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='rain_forecast' name='federated.0pxxgqo13sf05u0zntxly1ws3b45' />
          </datasources>
          <datasource-dependencies datasource='federated.0pxxgqo13sf05u0zntxly1ws3b45'>
            <column caption='forecast-summary' datatype='string' name='[Calculation_1874623353940688912]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(ROUND([rain_blend_prob] * 100, 0))&#13;&#10;+ &quot;% chance of rain &quot;&#13;&#10;+ IF [pred_rain] = 1 &#13;&#10;    THEN &quot;🌦️ (Prediction: Rain)&quot; &#13;&#10;    ELSE &quot;🌞️ (Prediction: No Rain)&quot; &#13;&#10;  END' />
            </column>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1874623353940688912]' derivation='None' name='[none:Calculation_1874623353940688912:nk]' pivot='key' type='nominal' />
            <column-instance column='[DATE]' derivation='None' name='[none:DATE:ok]' pivot='key' type='ordinal' />
            <column caption='Pred Rain' datatype='integer' name='[pred_rain]' role='measure' type='quantitative' />
            <column caption='Rain Blend Prob' datatype='real' name='[rain_blend_prob]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='644' />
            <format attr='height' field='[federated.0pxxgqo13sf05u0zntxly1ws3b45].[none:DATE:ok]' value='40' />
            <format attr='color' value='#000000' />
            <format attr='font-size' data-class='subtotal' scope='rows' value='9' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0pxxgqo13sf05u0zntxly1ws3b45].[none:DATE:ok]' value='10' />
            <format attr='font-size' scope='rows' value='9' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[federated.0pxxgqo13sf05u0zntxly1ws3b45].[none:Calculation_1874623353940688912:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Segoe UI Symbol' fontsize='10'>&lt;</run>
                <run fontname='Segoe UI Symbol' fontsize='10'>[federated.0pxxgqo13sf05u0zntxly1ws3b45].[none:Calculation_1874623353940688912:nk]</run>
                <run fontname='Segoe UI Symbol' fontsize='10'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pxxgqo13sf05u0zntxly1ws3b45].[none:DATE:ok]</rows>
        <cols />
      </table>
      <simple-id uuid='{9E0DEC7A-CC73-4061-8179-467202DEFC4B}' />
    </worksheet>
    <worksheet name='Performance of Prediction Models'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Performance of Prediction Models</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='humidity_model_predictions' name='federated.0jx8i9j1b9965t12hmf3u1t1mvbx' />
          </datasources>
          <datasource-dependencies datasource='federated.0jx8i9j1b9965t12hmf3u1t1mvbx'>
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column caption='Predicted Humidity' datatype='real' name='[Predicted_Humidity]' role='measure' type='quantitative' />
            <column caption='Real Humidity' datatype='real' name='[Real_Humidity]' role='measure' type='quantitative' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[Predicted_Humidity]' derivation='None' name='[none:Predicted_Humidity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Real_Humidity]' derivation='None' name='[none:Real_Humidity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jx8i9j1b9965t12hmf3u1t1mvbx].[none:Model:nk]'>
            <groupfilter function='member' level='[none:Model:nk]' member='&quot;RandomForest&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0jx8i9j1b9965t12hmf3u1t1mvbx].[none:Model:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0jx8i9j1b9965t12hmf3u1t1mvbx].[none:Model:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0jx8i9j1b9965t12hmf3u1t1mvbx].[none:Predicted_Humidity:qk]</rows>
        <cols>[federated.0jx8i9j1b9965t12hmf3u1t1mvbx].[none:Real_Humidity:qk]</cols>
      </table>
      <simple-id uuid='{80AAABD5-DA2F-4846-904C-095072072138}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Public Dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'><![CDATA[<Sheet Name>: New York City Weather Data]]></run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontsize='12'>This dashboard provides an overview of NYC’s 2023 weather trends and a 7-day rain forecast to help you stay prepared for daily life and seasonal changes.</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' preset-index='8' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select Metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Temperature&quot;'>
          <calculation class='tableau' formula='&quot;Temperature&quot;' />
          <members>
            <member value='&quot;Temperature&quot;' />
            <member value='&quot;Humidity&quot;' />
            <member value='&quot;Wind Speed&quot;' />
            <member value='&quot;Visibility&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='29' param='horz' type-v2='layout-flow' w='99000' x='500' y='889'>
            <zone h='98222' id='21' param='vert' type-v2='layout-flow' w='99000' x='500' y='889'>
              <zone h='13555' id='22' type-v2='title' w='99000' x='500' y='889'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='2' />
                </zone-style>
              </zone>
              <zone fixed-size='333' h='37444' id='27' is-fixed='true' name='2023 Temp Over Time' w='99000' x='500' y='14444'>
                <layout-cache minheight='228' minwidth='178' type-h='scalable' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#4e79a7' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='3' />
                  <format attr='margin' value='2' />
                </zone-style>
              </zone>
              <zone h='47223' id='19' type-v2='layout-basic' w='99000' x='500' y='51888'>
                <zone h='47223' id='15' name='2023 Total Monthly Rainfall' w='36938' x='500' y='51888'>
                  <zone-style>
                    <format attr='border-color' value='#4e79a7' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='2' />
                  </zone-style>
                </zone>
                <zone h='47223' id='18' name='7-Day Weather Forecast' w='44312' x='55188' y='51888'>
                  <zone-style>
                    <format attr='border-color' value='#4e79a7' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='2' />
                  </zone-style>
                </zone>
                <zone fixed-size='160' h='47223' id='28' is-fixed='true' param='vert' type-v2='layout-flow' w='17750' x='37438' y='51888'>
                  <zone fixed-size='117' h='13889' id='30' is-fixed='true' name='2023 Temp Over Time' pane-specification-id='2' param='[federated.1m7q2mx0lzi0xx1b2bpca0spt2mc].[usr:Calculation_1874623353954476050:qk]' type-v2='color' w='17124' x='37751' y='52443'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='81' h='9889' id='31' is-fixed='true' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='17124' x='37751' y='66332'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone-style>
                    <format attr='border-color' value='#4e79a7' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='2' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true'><![CDATA[<Sheet Name>: New York City Weather Data]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000' fontsize='12'>This dashboard provides an overview of NYC’s 2023 weather trends and a 7-day rain forecast to help you stay prepared for daily life and seasonal changes.</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='35' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='34' param='vert' type-v2='layout-flow' w='99000' x='500' y='889'>
                <zone h='13555' id='22' type-v2='title' w='99000' x='500' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37444' id='27' is-fixed='true' name='2023 Temp Over Time' w='99000' x='500' y='14444'>
                  <layout-cache minheight='228' minwidth='178' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#4e79a7' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='117' h='13889' id='30' name='2023 Temp Over Time' pane-specification-id='2' param='[federated.1m7q2mx0lzi0xx1b2bpca0spt2mc].[usr:Calculation_1874623353954476050:qk]' type-v2='color' w='17124' x='37751' y='52443'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47223' id='15' is-fixed='true' name='2023 Total Monthly Rainfall' w='36938' x='500' y='51888'>
                  <zone-style>
                    <format attr='border-color' value='#4e79a7' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47223' id='18' is-fixed='true' name='7-Day Weather Forecast' w='44312' x='55188' y='51888'>
                  <zone-style>
                    <format attr='border-color' value='#4e79a7' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='81' h='9889' id='31' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='17124' x='37751' y='66332'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E4B8EEE8-0D82-456A-A833-AAB1743C82D3}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='106'>
    <window class='worksheet' name='2023 Temp Over Time'>
      <cards>
        <edge name='left'>
          <strip size='170'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1m7q2mx0lzi0xx1b2bpca0spt2mc].[usr:Calculation_1874623353954476050:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0rlbgi90pff8ne1fvrcxo0llcsdz].[hr:Time:ok]</field>
            <field>[federated.0rlbgi90pff8ne1fvrcxo0llcsdz].[none:Temperature:nk]</field>
            <field>[federated.1m7q2mx0lzi0xx1b2bpca0spt2mc].[avg:TEMP:qk]</field>
            <field>[federated.1m7q2mx0lzi0xx1b2bpca0spt2mc].[none:Season:nk]</field>
            <field>[federated.1m7q2mx0lzi0xx1b2bpca0spt2mc].[yr:DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{75FC3195-8124-42BA-9C56-AB188ECC3891}' />
    </window>
    <window class='worksheet' name='2023 Total Monthly Rainfall'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1m7q2mx0lzi0xx1b2bpca0spt2mc].[sum:PRCP:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1m7q2mx0lzi0xx1b2bpca0spt2mc].[yr:DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E07E06E9-A5BF-4243-98C5-D5424EC63353}' />
    </window>
    <window class='worksheet' name='Performance of Prediction Models'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0jx8i9j1b9965t12hmf3u1t1mvbx].[none:Model:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jx8i9j1b9965t12hmf3u1t1mvbx].[:Measure Names]</field>
            <field>[federated.0jx8i9j1b9965t12hmf3u1t1mvbx].[none:Model:nk]</field>
            <field>[federated.0jx8i9j1b9965t12hmf3u1t1mvbx].[none:Predicted_Humidity:qk]</field>
            <field>[federated.0jx8i9j1b9965t12hmf3u1t1mvbx].[none:Real_Humidity:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7375F766-961E-4FD0-B737-1927D41041A0}' />
    </window>
    <window class='worksheet' name='7-Day Weather Forecast'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pxxgqo13sf05u0zntxly1ws3b45].[none:Calculation_1874623353940447246:nk]</field>
            <field>[federated.0pxxgqo13sf05u0zntxly1ws3b45].[none:Calculation_1874623353940688912:nk]</field>
            <field>[federated.0pxxgqo13sf05u0zntxly1ws3b45].[yr:DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C60EBD79-95FB-4DCB-803B-7CD060F8164E}' />
    </window>
    <window class='dashboard' maximized='true' name='Public Dashboard'>
      <viewpoints>
        <viewpoint name='2023 Temp Over Time'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='2023 Total Monthly Rainfall'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='7-Day Weather Forecast' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{698B16B2-9268-4592-88A4-E64F12CE6CED}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='2023 Temp Over Time' width='192'>
      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
      BCBhT/P/A9+dUXy2v0pdAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='2023 Total Monthly Rainfall' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='7-Day Weather Forecast' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Performance of Prediction Models' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Public Dashboard' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOydd3hUx7m4323SqveCCupCSEL03sEYYxv3nus0x3Hyu0mcxImTODe5tm9y
      k5viJHac4gqu2Bhs04sEiC5AvddVX2m10q6k7W1+f6wQCBWwDbaBfZ9Hj/acM/PNN+fMd87M
      fFMkQgiBBw/XKdIvWgEPHr5IPAbg4brGYwAerms8BuDhumaUAbQ3N1BYWEhRUTF9A6YJI2/e
      9C6OC87VlRZQWNUEwIfvvkaP4cIQI6ksLaSwsJCK6nqcrk/YHrfoePfDPaNO7/nwXXSWTybq
      UtB1NrEnv2DMay6bkcLCQvQGq/uEw0x5dcNnSq+lsQat3jB83NWmokurv6S4pQX51LX2jHvd
      5bRRWVZKbWMLQkBPax0f7sn/RPqZB3XUNrYMH9dVlaHRDQJgM/aPuPaJGefZfhKqy4spLCyk
      vKoWh3PssjXKALa+8Xfe/XAPpwqO85/fepiDhXXjJvDBpk2jDKC+rIDCKtUlK/nsT3/IscJC
      9nz0Lg9//VFaNAOXHBeLnk0fjWEAH21CfwUMQK9WjWsAtr4WHn/8cV7Y8IH7hKGL//r93z9T
      et0NJTz7l1cAEA4zT/3s51hRXFLcsoJ86tvGNoD+7mYe+drX2JF7iO2b3yCvoGLE9RP7trDv
      RPnFEzF185Nf/9H922Xi6Z/+kHe2HQSg4uR+Nu08fEm6nmXj339HS5/NfTDOs/0k/P6/niC/
      oJD9Oz7g4a99k4bOvlFh5GNFXLnuTm5ZnMmyaQn8c9suZkySU1Dfw03L56PrbBr+De43TXlF
      E6tuupXk2IiRwuW++CjdSahqSzl45DTRKVncvHLheaF8+Oq3v00wULDnXf784ms8/8wPaW+q
      4dCRE9iEnDXrbiU+KoRedQu79ubhlClZecNaEnzcEspPH6GgtI7la9eTFh8JQGNVIQeqSpi7
      7AZy0hMAwekjuZTUtDBr0QpmZ6XitJk4dOAATa2dxKZksW71YpyGHj48WMqKWUkcOtPAvbev
      paWunNzDJ5FaB2CoAG7f/CbTV9zJ5Aj/4ZykzFlJT0kuXQP3En1eDoXTyr6dO+jQWVh363om
      hSh4+73dPPTgXVh0nby59RBf/+ZDyK16tuw9xb233wjAvBvv5s23v8KZhgcwVe4hdemdJIT7
      IZw2cvfspKW7nxVr1pEaH0VTVSE99gCU5k4MisjzU2fX1veYvfp2ooLcN+yV5//I+kd+xl0r
      ZwyH0nU24eOjpKe1ji0f78LsU0xz+QnWrr2RM5VN3H3zKgB2bnmXRbfcR4hShk9UGkEGFT0W
      F9L2SjJX30lbTQVwG5WVleTk3AFAp6qGvQeOEJOaw43L5yNxOTief4DKhmZCoxNYf/ONVJ85
      zL4Dh2m3BTE5Pp6H12SP+WytRj07duzEgpL169cT6OvFng/fZe4Nt3NoxxaWrX+QCP+zxVrB
      Q9/8NtFKKMv/iD/89SVe+sPPR5StCdsAvX29+Pv5jXjzjXgL2vtp01pIiQvhR9//IcYLPgc7
      PtiEwQHN5Uf55f/+g7Ssabis41er5q1cRW1xEQAN9bXEp0whaZI/P/nF0wA8/fMnCU1IIyUu
      gvbO7qEH10ht5yAJYQr+54//GJbV1NxBRloCzzz5OO16Kwc/fJ03d50iJyeL1597hiNlKiwD
      PXQPOpgxcyYntr/OjmOVOAw9vPPuJn71699isjvRNJXyk//+I8lTsvFTjvm+OA8FX71/HRs3
      fTzi7Ct/foa6Xhdpk8N58ie/wIYPJ3e9RbPORunJQ+zduYXKFj31JScoa+w4F1Gi4Pvfe4R/
      PP9XNmzO5dGH7wbg9b8+y6lGPVlD+VNpDKiqCnlrw0u8sGEr53t2ju54i5PN5uHCD1BY1siK
      pecKP5x7rr5BYSTGRRGXmMrs2bOJjIrgvX//jW6DHau+lTe2HydIKRuKJWNGdgIVNW2Ul5cz
      bc4KpFYtDqCiopacnAwG1PX8/Nm/kJaZQ1ne+7y/7zQ4DDS265g+YyatJXls2JpHVGwCYUF+
      TJ02k5zM9HGerYtnfvEELr9Iwr3N/OKZPwPuL/7//fa3VDR3j/tkcpaspL2iCMcFZWvMJ/r6
      C//LxxuUSLwCeOrXT+NqPzPO8w7i1lvWogSO7P6Q+s6xqy8H9u3lgW99n6ULs8dV0I0EydCv
      4EB/3v3gffQGMx3d7npvekosH2/5kAUL5nPn3KXgUBMSk8I9t98MehWv7KkelrTm5ttICobK
      gjzKq5s5npvLd371GpnRSrxNaj48kM/8R2+nv72W1/L20KvpJl7dBSmT0Ot0PP/8BuLDA9i2
      4S/c8sAjrFy6EJWvieMdlQCsv/fhMXMwZ/XtvPatx+i55WwBExw8VsiSWxKprtfhGlBRqzay
      YP4MzhSWoymu4juPfY3CwiKUnadZsPC+EfLS593IpA0bCV9zPxH+CkCQe7Ka1977DUopqOsK
      yT9ZTDxgkQbyjxd/hZdMguo4HNz5Hnq9gRee/9N5EgVM0NTyCwojKS6avtA0Zs+eDcCdN81n
      +94jpEhUrLjp1hFvzZycHCoqKhBNtaz/wcN0HfemrqOH1kElSaHeHP7oCAq/QKrKS5EpfTl6
      7Cj3rcoGi4aNrx2kX6clPUhNdNwNhAf5kTFtJpnRStCrRj1bMdhBYYOexGwVOkBVehrjkB7z
      b7ybu1fNGj9j45StMQ3gG99/ilsWZw4fq9onkAuAC23vAP5+3mNe9fFRMjgweDEhnMk/SPrM
      WYCJ3//h3/z5pZeIjQjm/gfvB+B7v/ozvd3tHNm3jf/+0795/oe3XVRmr1ZLhr8/3kolg4OD
      EK3EaDSiVPqwf+tbGP2TeeEfPyV/6ys0DsWJnJxOfHgAABKJFJvNftF0hpF68x9338BbH+wa
      OiFBIZczddpMAr2kzJ49m8RQb3zmL+DlvFNIB118d9lCnvr9BizqJn79aPoFAiUkJCYQGhc3
      fKyUuhi0OlD6yDEajfjEK8EG02bMxksmGY6ZmJJO4ZH9dPcOkBgVNBx/1vRk8o+UcOfKGYyH
      0+kc/r3+rnt45Gd/pzHQzHefHdmuycnJYesbR/CzOUgIVpCdncnh7VsIT5uGFFAoFASHRQ0Z
      02xuCYmgOH8nZd0Snnv+RRpP7eGDwr4x070QiUyBXO7FzNmzkQKzZ8/nbImbNWuiwg/lxw8R
      mz0L+QVl62LfdABCoybRUPhP/vEPKS11VRCaAYDM2c+LL7zIYEcd8rRVpIR5UztG/JvvepDv
      /fiX9KiK6TPYePbnPzzvqpk3XnoJh76HoqoWfvuHPwEKQvwE7296G4thgN6hWtOvn3iM8OQZ
      6DsaSEhbNq6+MpmMN//9N7ztPdQZI3giK5bor3yNp5/9GUsWzuLYsQKe/dML6Cr38/77R/iH
      oZW6mnJy1qSMkrVo1Y186/v/ha2nDnVDJQRPAeDPz/yUG7/+C6YlhI6Ks3Dt3bz+xr2gTAXg
      gXvXs/H1N1gwK4vWpjoe/dk0UqbPo+GZPzJj9VeQ+kQgH6jG4BNPqPLiPdNf+8qd/OxHTzAr
      I56Csm5eeHQmhTuLR4VLypjJnUun8stf/pK//O05Qvy8AHjke0/wo5/8Fw0li5BY9cxYeRcp
      55WE1IwMXn/udSwdtTz0rUcJjEpnWpgRlSSJycEjX3LR6Tloy35N4Lz1SIGs7Gx+/ZefcP93
      fwHAnKU38tLb3ycv3wtvrMjDkrh1djSt1bt45V8v0NxQR0CKu02YMTWDf/zptyxevJj/uCGT
      UfhGs35hPG+89zFZSdHUNWmYNnv6BHfKzjuvvYTU1Mvpsgae+f0fubBsIS6gTVUvtHrDhaeF
      urVJVNY2CtNAn6hXtQkhhNBouoWqvlpU1jYKl8sdTqtuEx2aPiGEEDUV5cLqdJ+3mQ2iuKhQ
      dA5dO0tFyRlx5swZUV5VJxxnhQghzIN6UVRcIkxWh6iorBBCCGG3mkRZSbGoaWgRLiGEsJtE
      WVW9O4LdJCpqGof00oiOlkZRWl4tHM5zMvt7NaKwsEj0Gy3D51R1VaKptVP0aTpEh6ZPOK2G
      YTnn4nWL4tIKMaDvHc57TUWJ0Busw2GcVoOoqlcNH3e0NJ7TTQjR1d4sCguLRG+/cfhcbWWp
      6NTohBBCtDc3iKZW9aj7flaWpm9gxDlNR4soKikTFrv7BvdpOkSbWjt8Xd2mGn6Obar64Wcy
      rK/DKipKS0R1vUq4XGLEcz2bZnFphbAP3b63XnhWbDlQPKZ+tZUloqVDc/ZGiOIzZ0bk02E1
      i7KSIlFV1yjOPo6OlkZR09AsDHqtULUN5dvlFDWVZaK2sWXcZyuESzQ31IiiklJhNNuEEELU
      V5UJk320XlVlReLMmTOirLJmRDk4v2xJhPAMhvMwMf/71H/S5Yzmj7/7Fd7XmOvUYwAermuu
      MXv24OGTMaEBaLrH71cdC23P+K53gO5uzfDvwd5uTJ+gc+V87CY9+k8beQy02on1/tIjXJSc
      PonB6vqiNfnM6Hs0WMfvCLos9Gq1nE1ihAHoezo5dGgvv/z1sxQUlnMgd/+IiCcLTkwo+MSR
      IxNe3597YPh3/an9tH2CUQ/nM9BWQsmnjQyUnTjJ+e6448cn1vvzoLm6EPXApzPqwn3b8U7I
      xs/L3QX62EN3o9KaoLeWt3YX8ear/8bkEFSd2MPxyjbOHDvAnv255J84Q7+qgLd2nx4ls72p
      mv15B9j+wVuUNfexb/sH5OblsXXHfox9avbs20/uvt3kHS2ktqKYQ4cOseG1NzB9Shs8ftg9
      bKLkyAF6bJcWp+DYMayfIq1Tx49zNgnZ008//fTZC0q/ABITY1F3D3DzjSsoKjiK0WLj+JlS
      sqdOobq6niC5ldwTxfT1G4iPcTv8jx3ch6q1g45uLemTozl28hSnC8uYkpHM9i1bUXd1Exmb
      RP6+7biEoK65Ex+7jqpOA3XFJ4hKmkLFqUPUNjTR1WsgVCk5J2NqBnu3fcBHW3eQnpVK7v7D
      qFtrUEyaRmK4L/v3fExXdy8Fp4pJm5rBvqGwSanxHDpSQF11NbGx4Rw+WUlyQhR5efnYHRbi
      k1I4cySXxuZ22ro0TE0IZ1fuMaprG0hLSxiht5cMWuqrKa6ooE7VQaS8j3f3F9OjKsfiFUFk
      sC/6zibyjp2hpqqWuEkBHC1sIikulAMHjjGg7aCqto7OnkEs7eUcr1BRXFWHuqWVlJQk8vIO
      4C9MyCLSqC08SG1dIz2DdqrKikhOSeHFP/2J7PmLOHwwj+TkZITDzK4du2lurEMeGMX+rVtx
      +XsTGzMZb7mUAZOV5oYGpqdNoqzDzj035LB1zzHa1TrWr1nCoaMnuPOO20mMj6G2oZ0lS+Zz
      ZP8OWto78PILJcBPSWBIBCnJSWhVFTgDJ9Pe0sAdt99O8ZmTzJq3iLSUFBSOAerUBpYvWcCk
      yFDKSyvInjUThUSwb18uidG+PPfyxyyaO4W8gyfQd7dQXVdPd5+ZQG8nxwsKOV1SQVSoD1u2
      fITMNwjnQDeqXgNVBUeJSs2i+Mh+6hrrGbQrKC87jarsFE06QXJ8KB+89Q5Gp5OQsFD2b9/K
      1h35JMcGcaSghPqmZtLj/Hn59Y8Y1HfSPehCYujiWGE5VdX1zJ03je1bt01cBfLyDWTR4sXY
      be63bbdGg8VowGxzEBwS4g5k19LW42L58mWEB/oikYLTJdA1VNNlstPfb8TLPwQfL4iKS2LJ
      0mVo29yjRWfMXcQda+eyP+8EdW29rFq1ms6m2pEyLFBwppQf/OynHM7N48Zbbmb+rGnDOnbr
      DSxevJhFKd6catQPhz2Wf5R1627kpkWp5J5S091aQ1vJEZSTpqLVdOPCgKrNyPLly4gM8Wf3
      jp14+flg7SzlZL1mhN5uXCAklJdVYzfpiUqexppV82isbgVgX/4J1t20hhtmRHGwykJnUzl1
      Jw8QlJxN7oE8pFIZhw4dxNDXjd03hgduuwltTyeDPXUYCMLQ564SHsg7gFQm59DBXCJlRsoa
      GwmPDOZ4YQ19fe6RoXXHdxMzaw033nwzBYcPkpaWyeIVKwjwHhqiIPFiRmIgJapeAHxCE6Ct
      jNlrbxvKybl+j+lzF+Arg359Py5khAQHDGXXwaaNL8GkmSzIiAaJ++silQicwIGdH3BGZeDe
      W5bjtA5y5NhJfPx8cToEIKGnp5vCgiIiQ32oLz6Od+xU8vIOIpXKOXjoABIELpego6waSVQ8
      07KzWTR3BiBj9oJFZEV706ztI+9AATK5koO5e+luriVm2jJuWJgDKJiSnc2yFSsIC1BwprSe
      n/30e+zZsw8/bzl1BYfpMFgJCItlxeqb6GitIP90KevWrCYzLRFcNvQD5k/eCPYOiWbdmlWc
      OLzffRvlfpgMWizGfvoGTOzft49ZCxcT4q8Eh2DJ2psJt7VyvK53lCybzUZJUTlpU6fgshqx
      Wk0Ybc6RMoC0KVl4yyTEhwdQ39JNV1fXOSFOO1a7g6JaNanR/sNhE6ODqW7uprKijsmJ0WTG
      BvHa4QYWZZ4dpqbEbNFhNQ/SqzOQmJhATGIGa+/8CpkRvqP0zj9+ioVzZ6KQjn3LYsMCaGjv
      paxaRfLkMJLDffiwtIvZSaHET05i/qIlPHjP7QBkZbmdPKvnJPOr5z5kzYrZw3ImJ6WzaMkS
      7rn9FnKWruT1P/2FVfd+g9rd/yRuxhIAopPSUFVX0NNSi09ozJj65Cy9idLDO4ePw8KTmBTt
      LtwBMkGHdmDEfZw+dyELcpL4aFcuAAe3v8+01feweNZUAGR2KwaTEatDhr6hAI08gTtvWo4E
      97irFatuIExuoc/kHhA2PS6QvIZB7l6exl82nWbBlHDiEpJZuHgJ9995K/v25TJv8WICfd2O
      NZPFgt1x4dhiJUnpSSxZspjbb1kLviFkJscOX/WTudD2m3E4nUzJykYmgaS4WFKyZ3H/w18l
      9IKBCT5SQe+gma6uLhxOCavXrRvtCBPCIbq63U6N7q4uIYQQXd1D/7u6hcthE2dOHhPNZx0f
      Qgh9T6coKCwTPRqNcNot4sSxY6KjvVNYHEI01ZSLwrKa4fhn5Q4O6EXx6ROisdUt22rqF0eP
      Hhcmq2OUjLPxhBCiqvS0aGpqFDqj2wny5luviYLjx4Raqx+RhhBC1FWWiLrmjqFsmUV945AD
      r7tLOIQQA33d4sTpEqHpceelvrJElFTWCZcYqbcQQvT3qsXJM6WiS9MjbEad0A5YhHBYRI/2
      nIOqpqxwOD8uq0HUN3e6k7aaxLEjh0VXb78Y0HaJIdWFEC5RX+929pw9bzX1iyOHDw87kupq
      a4UQQjTU1QvHeU+pq7VxWD9tV7ewnX9t6B5o1S2ia0i/kWFcoqKoQNQ0nXN8aTqbxdHjp4V9
      yGHUoaoTBw8eFAcPHhQdGp37mRx3P58BbdfwtZqGVmHo14oj+YdFW1fvuRRsRlHb2CaEcIm6
      +johhBB2i0EcPXxYaHSDwmE1iePHjov2ti5hG7q/p4rKhU7TLSwOIYw6jRiwOISpv1ccPnxU
      9Bstw+VwGKddnDpxTOiN5uEyK4RLlBcViJrGViEcFtE95GjU9GiEy2kTp04cFY3NHcIhhKiv
      Krn6HWFlFWXkZOd80Wp4uEq56g3Ag4fPgscR5uG65nM1gE1vvzX2+bfe/jzV8OBhmAuGQ7s4
      ejAPu/Bi4fLlNJafolPTz4Llq9C11tHY2UVIeByZCWEcOl5IQGgkC+dMo+BoPgMWWLpyBWUF
      h7C55Ei8A1g8I50DRwuw212sWL16REqatkYqGlpJTMtioLeLY0eP4B0QzvS0aI4WlGB3yVi9
      ehmH9+9B7u1DQHgsMzISyD94CCQuUqYvRfS3Uq9qJzVrNkp7H2X1bUTHxpM9ZfSwZg8exmLk
      F8Ck4Ux1NwuWLEZh6qBUZeKGVYvYsW0Xk+Lj8ZbJ2Lcvl4bik1h9o5k3K4f6E3uRxMxg1ZLp
      bN+ZS3VjC4uXLKWnpRnkPiTGRGDtriS/Uj0iqf35J1m1ciVJsRH4BIWzeMlSamsKkfsEExMR
      THflYSrVVlo6e1i6bDnNdSXk7fqI1DnLSAl20aA1k3+8kFWrb+DYob2cPH6M2MRUstKTP8fb
      5+FqZ4QBuLwj+PZX15O35VWq1IPUVZWSf/Q0OdOnsWnTJmYvWEx8dARTFq1lUVoI/3zl1eG4
      QrjdK3KFHAkglUpRndpNsyWYZQvn4nSMHOAhkcqGfyvkQx8iAad2f4wleDIL52bjcLqQy92T
      0KVSKVa7E19vOS6X29+ubm3g0KFDJKVmccs9D+HrGmDDpi1X4DZ5uFYZMRRC2E0cKyhE5hPG
      rFlziPQHs91JaHgU0aF+1NWr8A0KJ0QpKKtpJC4+iRkLFtNeWUCtSsONN65CLpUQFRkFQEJ6
      Bg1VZQxaHcQlJBPm701klPtaVLAPBcWloPAjJNBv+PzUzClUlZVjdUBCchoB3jKiotyrHMyf
      P5+jBw/SpqrDL2EmizLj0Q2aCAgKwTqgobm9h5TUKciM3bToJUQE+37Ot9PD1cZV1Q2q07RT
      UtnAwICBtbfeilJ28TgePEzEVWUAHjxcbjx+AA/XNcPdoO/mVVBQ1Y6f0mui8B48XFOM8AM8
      cssspiVHjhfWg4drDk8VyMN1jccAPFzXeAzAw3XNiDaAcFp4/Z9/o1WjR+IdxE9/8jiu/nb+
      8Jd/4UDOd370JHFBMja8/O8RYU7t38KhU5UIl5MVtz7IirnuWUQlh7ezYcdJgn1kJOUs4mt3
      3zSmErv37mXd2rU89/zf+PEPHh8zjE2n4qOTau5bt4iGM3l8VNTLT759H47+FrYVdHHXjfMv
      mtnNWz7g3rvvAeC5vz3Pjx//wSe6WS8//zua27vps8iJCg3jx7/8BYGXtlz/KJ7/23P84PEf
      Dx8X5G1jZ34hAilffex7pMWGfWKZJm0zf/j7Brrb2wmNiyMucRp3LE6jhwhy0iZ9OkWvcYY9
      wRUqDWEKK8nTF3D3bbcQZmuhuDeA3C2v8+gTv+KmpdN5/p8bWDwjHf+EaSPCLFswkxtuuIEV
      K5fz9sbXWLbUPXWvpjCfjLWP8PV7bqG3IpdSnQ+pEV5sfO0VduXmk5ieRZCfEq22l/i4OE4U
      FLBw/lzyDhwmOSkRXFaOHCskYXIcMp8Admz9gCVLFrFtRy4Op4l5c+dQmLcN39SFTPJz8Oq/
      /0lJvZrp06Zi7e/htVdeIjf/FOlZOZw+uI3n//kqjQ0NJGbPo7LwKO2NNew9UsSs2TORYee9
      DS9z8FQFOTNyMHc30NhjY+8HG4lIm0mAt4zZ85cyY7ISa/gcfvDofXi7BjhR0kjVyb2Y5BE4
      +1t58Z8vg18kkyeFc/LEESpOH+ODHQfImjkbH4WMkwd2sOGdD1Cpddyy9gYALL1NvLqtiP/5
      9ZMsXzSH5557nmVzp3CqRk18dBh9bTW0DEjxduj454svojbC1JTJnDhZgL/cwVtb9jF7RhYK
      32BWrFiBvkHFV3/xc5bNyETYBjAKP/wcGvYdPs2Hmzch9w/l0M4tFNR0MGtaBnajnpf/9SIV
      LTpystKRjFNYrkVGVIHkAZFMiY+kT61i69F6lk6Px4Yv4X4KFH7h+GJDETg6jFIp+NOvf8Xj
      jz/B+vu/NmZCq+/9Bk0n8xAuFzfc9iA/ffwx3tm4EYATBefvuiKj7EQ+/TZBzfFd9EnPLj4r
      RyETuAAbMC3Cm1qtlcJGPXPSQtnw8kusuefrLJ/qx1sfH8Hlgtse/CaPP/YQGzduZMW6u1m7
      7iaefvppEsN9Ubc0M2vlelZn+LC3QMXWN19lypL1PHDTXF7Z8D4D6gZ+89s/MWvNPUwa7zXv
      GOCPv/kN3vGzyEkO5NW3d/Cjn/6M8tz3URud7N22mejMhTx2xzze2pZPXcEuCrtkPPWLJ5kc
      ETgspubMSZbdepc7997+JAUFYAkI5/Bu9z4D27bvIzoqhJdefpWv/78f4ddbzpEqNSfy97Dh
      vT08eP+d4z7gAXUD1c29mHubyS9p4UdPPMFrf3+Olbc/iI+mnJZBePWll1j/lUeZG2Pn/b2F
      45eWa5BRq0OfOriDYzVannzqKZRyKecvJi/GDePLE08/Q215AVs++oicJ747KiFhN+GUKelu
      qeOf7+zGWy6hvW/sdXAevGsVW3YcxdzSzKM/PPdwc2L8KK2vR+Yfy8LlyWzKP4lTJsMLqCov
      ob33r4BgUvJ0WuqsvLP7KHIJ9NlHL4Idm5ZJanwU7T2hNA7YqayupFzlXghMGR4PBHH7A98g
      MzF6VNzzWbD6dlbMzcSmLqOgvIrf/fY3mHQ9dHT3ExKdyIyMJOi1YXfoOV3cwsOPfRepBHx9
      z83Y9lZ6YTGZh48twokCOZMCZWiMFvodcoK97JScKuCvf/wdwm5ielQHyPz53ve/g+ISW3I5
      02fh5aUkI2cGsRHBhIX7YbVBZXkR3S88BziJnzL2EvfXKiNKhr2/laM1A/z4u18fPhcXLOVE
      VQsxdCILjsc2RpgTx44wfc4C4ianYOzPHZWI1TTAP/78R9Z85YecyX2Xh/7zxwQb2/jDv94f
      U6noqUvQfPAU/pGZeJ33PV68eimPP/l/fOc3f0UZ4Yep+S0UkYsA91r4N//Hd4kJkNDYoefo
      vg/5zx8/ibGtkn+9717ga1DXN7TywOiPfHJiMunL72ZmUhgVdS3gaEWhuHgFX+7lDuMVkUh2
      ShJPPvVfaFuqUYT4jAqbnhDAztxC7liQREvHuVUypsxfzb9/8TsWZz6DUV2LxiZHCdyxfiV/
      eOZXLLz7O4AX6VnZfPfHTyIxadHbFDSXKy658E9EcmoGdz/yOGHedlo0xotHuIYY0QbwE0aq
      y05z6NAhDh06RGjsFFbfsILDO96jvN3Mdx55EKu+h0P5h0aE8XX18/bb71BY2cgjj36bgPPe
      bh9tepPTxZWsf+gRpiVFkzo1gy0b/k2PzY+lc3OIj3dv/BAfd/5/Cd21JeSsewBhOsoAACAA
      SURBVJBJQcphWQr/cNSaLtatWoQUCbqebuYsu5FQf29mzpzOh+9u5MiZKubMm8+C2dls+Pe/
      sPnFMDcnlfi4OKKDvHh5wztkzFxAgLd8OE3vgFBWrljM4R2b2XXwJDmz5hIeEoB3QOiYI0oV
      vsFEhQ2tnyPzJj4mAqTepE8O5eWXX0FrljNvZhZyqYS4uPizkZi/ZDmq03vZf6KC+Qvmk5qc
      CIBE7sPc6Wm88dorNPXY+N7/+xYKmQTvoGja2tq549bVyCQwPSudja+9TFWzlvnz5+HjdS4P
      FxIVHze8nZ53QCjhwb4j9D4bLzQqnsVzp7H5rdc5WdrA3HnzCPBVjinzWmR4MNy7eRVkJ0V+
      KTzB+z9+lyO1vTz75Pe+aFU8XONc0g4xnzdrbn+QNV+0Eh6uCzyOMA/XNR4D8HBdc8UMYKLd
      /jx4+LIwoQG4HDbKKqvpUndNFMyDh6uWCQ1g89sbKa1rYsfunRMF8+DhqmVCA5g1fRrajmb8
      gif2hnrwcLUyoQFYnS5iIsI/2U7pHjxcRUxoAFNnzOOuu+7CZhy9uQUAThtlpWWUVlRj7tdS
      WlFBU2vnldDTg4crwoSOsLryIqqb2kmdOmPsAC47ZqsdJE4a27uYlp1NVWUlLlc0LpcLz4or
      1wA2O3h9ykkPVwHjGkBF4XEqG9oA0Iyz/anN1I9/RBzyATUWwO4UIARSqRQhBDKZZ+Wqq5n+
      tzcxeOAIca++eMXTEjYbzr4+5NGfb3tz3CpQ9uxFZCZGoenV0dmpHjOMV2AUCksfwi+IaVNS
      aaytIjJm8hVT1sPnh8tgwF5ShDxg9KjWy41wueh96in6fv9/l0ee3Y64RD/UhG2A0spGsqZl
      4rQZxg4gkZE+dSoZqUlI5UoyM7OIDA0cO6yHqwp7ZTm+SxfhHT8Jp15/RdNydnbgnZKIPNAP
      4frsm32bN72F9cD+iwdkgirQgE7LTXfejY8cEiZ71tu/3nDWlOG9eh3CZsPV040sOPjKpdVU
      j9fUDCQ+3ri6OpHFjD3E+1IQLhfOmjKwj7+FtrBZsW5+A/nMeeMbgFQiOH4wF5PViTIogpSE
      2PGCergW0XUji5uMIr4N0dcDTLliSQl1K14rbwIJuDRdSBA4m+tRLFr1iWW5mmrxmj8fZ3Pz
      uGGcNeVI/ANwlheOXwWSyeQovb1wOl3Y7B4/wPWEsFqQhLvnhcgmTYL+viuankTXhSQ8Enls
      HKK3C2d1Ma6yU5cc31l2Csfh3QC42lXIM3OQBfgiLCYA7NveRpyXB1dtGYrla/C+/5vjfwGs
      VivT5i5lUkTIp82Xh6sUl74PSXwSANKwCFymy9wGEALn6UNIpy8AiRQREY1EKkUaOxlX0WFw
      OJEGhyIsJiRK3xHxzu5YD+6qjPPjNyEsCqe6FTkg9L1I569AljoFoVFDYAi0NeKqLkG2YBVC
      04EEF9Jg97Iz434BgsOj8XJasLkYuTO7h2se54AeabS7yivxC8Auu7zzppxnDoOmE1FThlOn
      hYRUd1o+vsjSspAGBSPLnA6dLcNxhNWC48PXcfVpzp2rLESaPQf5qvVIIqLdBiOVIPHxhfhk
      7DotorES2Y13QXsTorkO17F9yNfeMyxjwl6gnTs+xuJwsvWjDy/rDfDw5cZhMSMNjxo+todG
      4bKN36j8JAghsBkGkd50H6hbsA8OID2v61w6YxHSG+6ESZOx950bgeAqL4D4VOwdLYjBfoTL
      iVC3IZni3iRdlpCGq60JSZi76iaNisViMmPT9yFJyUS6cj1C04H05geQBJ5r0E9oAHfeeTs7
      N7/DjHkrxsmNk5LCQhpUrfR2tlBSUUF5df2nvTdXNUIIHPpxhoxcZTidTmRB5/X6RMdjHRy4
      LLLtg/04YhKQyBW4kqdi7upAFhpxLoBEgsRbCYGhGExuo3PZbJiQIpu9GOuAHsuxfZib6rCl
      ZCKRuouwZFI8ro4WpEnpAEh9fDEJCZbgSCRSKZKwKKTzViLxHunXGPfbVlRcjJfLjFTuRVtb
      C8yaOiqMo7+TPpscl06P0VvKjOxsKiorcblc191QCKfFTG9NNZFzFnzRqnxmzBIZPkjA4QBA
      EhzGoMmEIsjxmWX3DxrwjY7D4XBAUgYynwCEXOE+Ph+ZjAEUKPr1DGi6CE7OxOkSKKbORCKR
      oq6tJiYr51w83wAkS9biAlxD51xhURAYOFr2eYxrALNmziRv50esvuUOwv3HXixJ7h9KiL+Z
      AEw4FF5oB4w4ndfnUAiTxUavU06ow4lS+eVcXMrhcKLW6oiPDh83jNPhxCzzQS4/VzT8gkNo
      0xkJl8qQSt2NUCEEEokEjW6QkABfFPLRz9pottLXbyA+Omw4To/JydSYYCRDjdmg+MRxdTF5
      +ePsG2RyYioKhVsfeahb9/DMHJQBARPmNywhEYVCMWE5nLAKFB4ezKY3XuedreNMiJH7kRIX
      gn90AhnpU7DoNEyZOvpLcTmwOpyUtX15qxj9JiuysGi0A+aLB/6CMFpsdPS6vfqDFjvqfreu
      LX0mzHb30AGjyYLwHenNl8mkBIeGUtSmw+Zwe2rL2/ooaNJSre6nuWdwzPQ6dUaatAZcLndN
      oM9oQ+YbMFz4L4YrKAytWQwX/vMJDJy48AMolcqLvoTHNQBDfy/b8o6zfOlimhtrxxUQGBJB
      dEQIICEuIQml4sq89fsMNlq0pisi+5PSrrdgc4502WuNTiImRdJp+uyu/CuF0WKnx2DD4XTR
      rjNT2jFATbeBis5BugcsAOhNNuR+fqPixob6Ex3kwzGVDqvDic7iJCrYl9kp0bTobdRqDPSb
      7cMGAtAxYCMsOAj1kOzaHhPRoRcvuGdRBAXhc5G3/GdlXAMQLhdJCQnYbDYefOChK6rERJjt
      TgxWB516M3aXwGoff5DT59XmKG0foGfQNuJcjxVCA3zoM332evKloDePdE6WtA+ws0JDa9+5
      L1D34Miem36zDS9vb/RGGz2DNiRIaNKamTM5iF6DOz89Rge+vmMPgIsL9kEqkbC3WktieACJ
      ob74e8tZnBqGTCKhQm3gYH0vebW9NPea8PLyIiUqgKK2Qc609mO0OgnyufSh1ZPDA0iJurJj
      y8Y1gICQCOJDfdh99AwH9u+6okpMRJPWxN4qLdXdRmKD/dCZbOOG3VetxWi7sqtRCCHo6rfQ
      Zzynh85kxy7zRiaVYBsyUIvdyYDlyhiD3mTno9JuTje7HVSDFgctfWaWp4VSoR6kTWemvGOA
      HeUaegwj9YwM9kdjsNJntLEsNYzlqaEE+SjQDoVrG3QS6Dv+RokLEoNZlhJKQug5I/FRyEiN
      8GNxcghrp0aQEu5DRaeB2ZOD8VHIuDU7ghBfBfMTP9l4Ih8vGX5eV7YdOWEbQIIELAP0m7+4
      z3rWpADWT4skc1IgwX5eaAbG74/u1JvRT2AgF2KynSugZruTys6Ld/X1mx14yyT0DL1dhRDk
      VfewINn9cO0OtwFUqQ0cb7wyQwi6BizMjAugudddJWzSGpkS6Ye/t5xZ8YHUdRuo6TKwIi2U
      5vOqjb1GG/Hh/tR0GXGJoQLmLUOpkDFosdNntKFUSJHLxi8W3nIpwb4Tv8UTw3y5dVok3vKh
      LkqJhJRwXwKVX76FCMfNqcU4SELmLL5y3z3cfdvNn6dOo/CSS5k1OYgQXwXd4xiA3emiZ8DM
      oPlcoTbZHLxzsm1cuXnVPdR1uxuFHxerOa3SYb7IF0QzaCElwpdeg1uPE419JIf7Eubnfms6
      nU6EEHTqTHToTJ+oWua8SBXvLJ16M5EB3tjt7rx291sI9XMXyuhAJTXqAaICvIgNVlLR0c/R
      enfngckmCPf3JirQe1jfYQQcqdOSHXNl69xfNsZvBOs1FBWXUlNbh0N8OfYMiQxU4nAJilt0
      o6516MyE+sjpOa8XprJjALPdzolGLf3m0QP6VJpBGroGqOsaJCrAi5y4QGrU438FmnoMHK7t
      ISM6AKPFjtZgpavfzKyEc592L6mEAbOd7n4zyWG+NGrGmUsxhHOoh8TlErx9ooVNp1oveh/a
      eo1EB3ojwW0wnToTEf7nCvTqjAjmJAajVMi4e1YMvQYLbb0mhMT9uBenhrF8ysiu0NkJIcxN
      DCFujGXdr2XGNYCwmCSy0ydjt5o4kH9kXAHCaaWqtgGX3UJVVSWa3v4rouhZ1mZFUdjcN/wG
      Pot20MLkUF/059XN67sGuG1GDNpBK++eaB4ubAADZjthfgo6dSZOq3rJig0kLsQH1RhderXq
      AU6reilS9XHHzFhC/LyIDfbhzWOqEYUf3F8rtd5MgFLG7MQQciu7sDlctPUZsV/Qc9RrsPKH
      XVXUqPt552QzMyYHE+SjoLV39Br9lrPdlFYHcqm7WhGolNFrsOJyukZ0LWZMCsTXy13dCPRR
      MDnUlx2lHaRG+o97X5Mi/Ii5zgo/TGAAtYX5bN59FLlCSVzM+BusNdQ3YrWaqa+vJ2VKJhr1
      +FWOy4FUKmH9jFi2F7VhczipU/djd7po0gySMSmQXoO7y83udGEw24gIULJ+RixZsUEcrTs3
      kKpLbyIq0BtvuZToQCWRQ3+dutFdrY3dg1S06ujsMxIe4HZyrcmO5sEFCSSGjyxUvl4yKtv1
      RAZ4E+ijYGl6BHtKO3jzSBNtFxTsU41absiMpr5rkEWp4eTEB7MgJYzjdRpONWr56Ewrbx1t
      5KMzrfx+ewWdOhPlbToyot09I0E+Cuq7Bi7aUEwK96NNayAr1jNb70LGbZVkzFnJU3NWThjZ
      rO+iWd2Hy2YgLDIGhUwCEskVHwoR5idHLoHnd1eSGRfKruI2fLzlxAR7M2C04HA4qGrXExfi
      M+wGX5ASyptHm9APmrDYnDRpDNw1L4FlUyKRShgOJ0MwaLLic16hatcO0muwEuzrNcKtHu43
      2oWvlEsoUfXwzZXpOBwOpkT7c7CyE2+5BO2AmfhQH/6dW8PDS1OpV+tZnTmFmZODALcO4X4K
      egfMaAfM3DIrnkClAu2glRmTQ9he2ILN7uIbK9JwOBwEKuVsOdXM+lmTJ3T3+3tLeXRFKgop
      E4a7HplwVYjC8jq8fHyw4c3X7r9jVBif4GjWrIxGpWpiUlgg5RUVBAaFfS5DIe6Ym4DJ6iAy
      yIdJIT7Ehfoil8txuQRyuZzi5l7W5MSNcOl/bVkaNZ16gny9uGehLzLp6LZNbIgvnXozU2LO
      VW2MFhvxob4E+ChGyBsLf6UXJquDyeEBw/IfXTWFhq4B2nsN1KoH6DVY2ZBfz5SYYLzG8HKu
      mxGHQi4lPsz9dQkLcO/YMj0hDD9vOf4+7vp+YkQASzOimZMSMUrGhSRFXl+N20tlwlUhJA4r
      t9xxD5YBzXjBAEhKSkYZGM707GyS4j+f/Wj9lQoig9x11pmJYUQEun/7eck406BBN2ghNnSk
      R1MmlZAVF0JcqN+YhR8gPtSXFs25doDRYsdLJmFheiTTJoeOGedCvRLCRsr3VsgI9fdCO2Dm
      aJWab6/OoLPXwJKMsZcASY4KHC7857MgbaQOgb5e3DDNM1X1s3CR4dDr2bn5HdKz535e+nxm
      7l6YzLZTKu5b9Okm8seH+7OvuIW/bS8BoL3XQEyILynRQSRfgldycoQ/X185ev5siJ+Sbp0R
      vcHCpBA/fvvQfPyV1+6CU1cLExpA0amTNPaaaKou/rz0+cyE+it59qH5xI7xBr0UwgN9eGhZ
      OjIJaPQm9AYLAZ+goEolkjE9qUovGe09g4QNjaydyNnk4fNjwgrtsCdYfn3NC56VEglCcLSq
      A3+lggCf8YcGfBIUMi7pK+Lh82PC15AyIp6nfvoEyxbM/Lz0+dIwJS6UurZe+gZMBE0wNuaT
      EBGgJCPu+nqZfNkZ9wvQ1VzLhtdfp6qiArPwZs7s2Z+nXl84fkoFgyYLeoOCgE8wgnEifnDH
      bLzGmDji4YtjXAOITpzCf9x3L7OXrqC67OppA1xOHHY7ugHTiI2/Pwuewv/lY8IqkLqtgdLy
      SvYeGGcohMtKdVU1xSXlGK/F/QGEQKs3EHiZDMDDl48JG8F33v8Qb2/ays3rxhkNKvUmIyON
      M6eLr8n9AYJ8FVQ163C5nFyGNVs9fAmZ0AA2v/M2BMZQcCKfaVNTRwcQTgpPF5I9cw5tDdXX
      3P4AIf5KJIiLen89XL18pk3yhN2EVOlHq6qZpPRrb3+AsEDfy9YD5OHLyUV3iImJCIdx3uQS
      rwBmTc8ePs7MzLr8Gn6BhAf7Do+78XBtMuFYoLUrF2GX+jBlctR4wa5pYsMDiQwevUKCh2uH
      CatA2z7cTkxCHCdPX/pS1dcSUxKi+OEDK75oNTxcQSY0gNvuXE9HbQVZMy5luT9Be4tqeObS
      tYJ0nFGjHq4NxjWAztoz1GpBWAYor6i4qKC2hhqUIZHUVFVdVgU9eLiSjGsA5kE9pQW5SCKm
      IXVMPLEboN/qJDzQD7ncM8rRw9XDuL1AKXNWIwluJCElFXXHGD6AC4gJDaSkogK5XHlZFfTg
      4UoygYdHQnKqu+DHxV181lHopMmEfj6TwTx4uGxcERfn2Unxl4Ozy3Bf7rBfhjSv5bxdDenB
      FTIAqVSKRCK5LA/M6XRe8pCKy1VIPq80r+W8XQ3pwUW6QT8Ll+NhAZ8oM1dbmtdy3q6G9OAK
      GoAHD1cDXzoDaFKpxr2m13ZTXH55/QyFp47T2Hz+anYG6mvVw0emQT0FhZ9tQlCrqpaW9m4Q
      dg4ePDpuuObGalStl29L2paGCtq6xt/jt0fdTmXN5dnU8OhR95yR5qpCmrrGX1/1cudRpWqa
      +Hp9Gc0T7Cz0pRvnazQZ6epopb2ti4T4IBq1ErwldmbmZBEcHoWv7vLsVngWs9lMiERKfU0F
      NruN4OgY1B0taPs7WTBvNr4BwYQG+l5c0ARYHBKw96NpHUDuH4hxQEdbhxovv2DaG8pJmDKT
      hNhIElNSqK+7fBOKrC4vXPou1P1d9EilCJsLp0mHV0AE2RmpREyKQz9Yd1nSktsNaI0OrOZB
      bBY7raoGuvoMBHrLSM7MoL6miazMKZc9j0aTEXVtPQFT0mipKMdut6D0lqMMSiIxNpiktGTq
      a8fewgm+bF8A4QQhQaPRIKwGTA5ISEnH9wqOyIyKiSM5IRZ9fz9yL18kLhuTYhMI9ffhcs6B
      UUolaCwQopTRo9EgkcoYHBwgKj6ZhNjIy5iSG4u+E22/GU1PHy5kJKel4y2X4BccTnbGxf06
      n5SwuAQ6K0/gGxYH2NB06zEYDaSlxnP66EmiEz/dOk0XRYz86eMfTEZmGnbDpe3V9qX5Arjs
      ZmrrVSSmpqNTt2BUKAkKCkPmBYpQ92po2u5OzEYjXT19REdcfJW2SyE01L2DYVpqKl09evz8
      gujXdOATHIIMGNRrMRrNtHR0kRA79ryIixEWGkZooJKWLiO+weAlc6HpGyQiIgQv2dmGn4um
      +iaMJismqxNf7882mchoV7Bg7nRs/VpaWrrpqa0lJiIaqTi3NmhXRwtGkwmtfpDw4M+2dGJo
      aCQDciVxMRF4maQMWnUoRSAyZTBePt6E+covex67O1rxDwojPMyP+upalH5BBAf6AV6EhvkD
      ThprWzGanVjsUSgVo9/3EjE0b/HdvAqykyKZlnz530YevlgGtb14h4fxRcxsMPT3YbBLiA7/
      ci4H86X5Ani4cgSEh31hafsHhfLp1uj7fPhytQE8ePic8RiAh+sajwF4uK7xGICH6xqPAXi4
      rvEYgIfrGo8BeLiu8RiAh+uaEY6wA0UqKlQTb4jnwcO1xPBQiG6dEY1u9A7lHjxcywx/ASqa
      NBwoGn8svgcPl8ojt8zkQJEKlXr8uQhfFoYNQKM38sDqbM9gOA+fiXfzKjBa7KjUen776Kov
      Wp2L4mkEe7iu8RiAh+sajwF4uKJYDP0Ul5ZhPW/R5KaqUgyO0WH7e7swj3G+tKwMgEFdD62d
      PQBUV1ePCNPdPXKecWFR0Yhjtdo9z7u7q+v8SWSjDaCpuoTXXnmZfUdOIwDhtLFz63u8t3Un
      NqcYM0xXawNvbXydN95+jx79uZ6kzW++xEsvnf17E8vovA1nbkwMavadKB8+7Gyq4uN95zbs
      sxt6eOnNzePHnyCtfftzL7hqI3df/rhxHYaeoXy8zMET40+SP3b8+DhXXGx+42Xe3Lx9jGvn
      0t6/70K9rm7efnMDFrMBtUbH4X0fc6igFFVVGQa7nY/fe5vS2lbUqmo2vLmZ9za+yPOvb6an
      rZ6Nb23CZHOSu/0DNrz3MQB1Rfls3LoXq66ZP774NnZzP2+/sYHWznZ+/z//w578AsqKTpJ/
      /DRyuRxNWz2vb3wXixOKjuTRa3GRm5eHuqmKV1/bSJ/BOtIAHANqKjsMPPyNR/DR1XCmvoed
      H7xN3PSlLJ0ex9sf7MQ+RhiT1cEd9z3E3beu5v333h+Wd+/D3+a2JVmkzF7Dt7/9MErAoNdS
      UlqOzeFiUNfDrt27KCwspLNHh8tpp6q8lHpV+5BCFrr7zk2CV6uqqKysYdDuNsSC/IM0dnYP
      XRU01lbS0uE+Ng/q0A0YqCgtoW/QNCqtbk03poE+SkrLsbsE4KK7u4eBPg39JhsM6Xr2t8PQ
      g09sFo8++ghefVUcKmkGBK2NdZRWVON0uXVKSXHPfe3q7kbT2Up1vbtnraH8GPXdTnIy0xHC
      SX1NJZW1jUNvI3faAJrus/m5Nli1Yiknjx6jt6ueoxVdHD98AIDmkiN0OQM4sG83ew4c58H7
      bidjSjr33XsvH23bQUyAk20fbabPazIzM5KG5UX4e3PwZDWLFs3gyO5tBMRMZvfeI8xZuICb
      ls/nwMHDzJk9k7LycnbvP8xDD9yFXAKLF0zj2OF85H5RmK0O0mP8OHSqcqQByAMnsf6GJcgl
      Tjp6zcREBKA1SZieEkNMynQkJi2KMcIkp6XSUFHKofzD5MyaM+7NMGhUvPzmVqwmPS/845VR
      k84bqkrRDphpKDrAwaKGMWWsWDKd/OPur0Kz3kZKuA8AO957g9o2LcVHdpF7spKuuiL+9q83
      GLRYeWPjm6MFmfR8vPcQJn0H728999aVCxMfbt8PwO7t25EqRm6SLZFISZgcj8FoYlDTRkVj
      Oyadmne27ARgf65b1psvvcDJkhoqj+7idEMPCIFkaNGmTlUtrV06tK1VfLx3vC/GtUFdbR2+
      Pl4M2r3wcfQTGZMAQFjMZPo7m0hITifCX87GNzcTHDmJ99/bRGLcJJq6jGRNzaD2VC7lDeeW
      rZk3J5OCyg6CvaRMTk6mqaaG9IwMvF0mducXEJeUjJ+3u3MzKljJ629swuqC4MnTKN71LjMX
      LaK85Ayqtk5cQoyeEqlTq3h/Wy7r7riX2GAlI3Y6HTq4MAw4AAlCCHR9unFvRtHJ49z11UdI
      CJJh17ail4UTFxfP7KFd6Bu7BVUVpUidRuSihZXJyaNkBMdPQ5X3IZa+QPzCUjB1uNcJ6rNL
      +eoNy4FlvP3OO6RMiWbNrXexMDOapoY6AkIiRqSFbzAP3nsXYEH15o5h+b5hiTCwH7vLhlko
      CVCcW63s5MHd1B3fRXL2HB5+YBkWXScdqjraJVJ6jCPNOTp5KrfdfCNdVX5U9huYm5VOXJ2d
      6VlT0LTU0lBTiUQqwSbRA7PGvWdXO2vveGD494oFs0dce/InPxwVPmfuyONp02YM/569+h4A
      ZmWf24vuhzMWu38snDl0Zj4AD3/lKxdIlvLff30JgPQHvzl8dqQB2A1sPnCMb337Uc4uVuCN
      FZ3Zjj8GrBJvhN3A5p1HR4QxGq3MmDuXGczhlZdfAZaNyhhAZEQILW1qEoLi6NAayFZKEE4n
      LtyNkaOnK3nssccw9dTzQX7rmDJAwqQABR/uK2DN7few9R23AdgtVpwCnMZebK6xN7Y+P62J
      WDU/nQ2vbCBzya0jzi9YuY510yP5YG8BLpfg4O793PWNbxMitfPS6+9cROo59hw6wbceewyX
      dZA3Nn10yfGuJ3o0n8+G6yMMoL+7lV6dlldfdlvKipvu5M6772Tj6y/hRMa9X/ka/V2qUWFU
      xQdo6e5HuFzMXLx6RAJefoGEyNx7BmQsuJHK/9/emQa1lV0J+JP0nkCsAiR2EAbEDmZpsIMX
      yKTbsRvHvdidSU/S1TWZSf50TU1N1VRN5s9UJVVdlcrUVH6kqjuepWpmkuqepDPjtsc2adto
      bLfbbcDgBbyxmVUsBoHEIkDS0/yQwU0bgREgGfO+P9LTu+++I+med889595zP/otx6/YySjc
      jVYN+1/K5Ve/+oD9Lx+iKCuZXx//Z2L1kcTrjSAEExcdsVhXWJSeYLWSvVXf4F/++0t0GhUJ
      8Z5UJa9+q5LjH34ASpHv/eBd5gZaiQj25EGIi/Vs8vfVey18Bkri4vRfeYXUon0MfGLih3mJ
      i/dWqkOJi3ahSzbyvcMip85coGrfbj7+5w8J18YQExe/5F4Lr4vfX6kmTu/JjLC3LI8PP/w1
      0bp44uLjltw7Nm57bkj4df7y/Y8ZsCkQRRFRVCOIIqJa9LyKImq1iCAKiKLw+FhAVHte1aJI
      kCigFgWC1J7XYLUKjVpJlOAgQTlDwswI+r42OS3K0zhouGiie0rNdw9/M9DCbDkW2tF/1bUu
      RoJnbGM86B2hpCCX+603sc5IlJWXIiig/V4L49MuysqKaLneSEhMIlnpKbz21//kFwWQ4wBP
      oSA0JpVjNXLj3yiciLids4CbHcZcopSTjEx54gLmUQs6YYqW5iZCDEWMDfWtXNkGI+cFegqB
      /MLcQAvxQhEREYFnuKig7c4NVJEGEsNVwDzMOXmkkEByEhMSxAZlgX9mZAWQ2XT6uzsYGBgg
      Jjae3r4h4pNFrBYNY7MC6iABl+Qma2cpd5quEKr1bxIvWQFkNp3ktEyS0zwJeVNfe33x80gg
      PbFq8biq6on3MD5ShUpQIKgUqAQQBDcqQUIQXIvHnvdOBMGBoBIQlCpEyyfFEAAAD3xJREFU
      BAS3ClFSIbpUiA4VoluFIClRuJRIKid25RwNLbepiAyWFWA99LR8yR9MzegTUnnnu99hofc+
      f+4Crxx4OaCybXWO/+zpGMFGMpGdg1arlRVgPUzbLFQf+T4zLWdo7eyl3lRLojaEsxfrUYdH
      0HL1InZ1FH/7Vz/Cz6atzCpotVpAng26AbgZGrMx/agHXXImQWqR8vIK9u9MwSqFYkyOxxFo
      EWW8IivAOtCnGGk6/wnJxdUU5RiZHBvBkFNIaX4an7eOUlWSyoxLKXezzzEb/t9IkoRSuT30
      Sp+axY9/nLV4/M4P3v5aiUL/CiSzZja8pbqXzJ6TkXm+2R6PahkZL8gKILOtkRVgC3LlyhVm
      Z5dbYCqzVmQHxRbEbrdz8eJFHA4H1dXVhIevb4fH7YxPCjDY382gZYbSohy+uHyZ+NQMMtJS
      Nlo2GS/o9XqKi4uRJInBwUFZAdaBTwqQkJzG5Ew7SPOEhUczNTWN2+1GkiQkSZI9QZtMaGgo
      ra2tdHZ2kp2djdO5TC6RACFJG7m9+OazLhPIMe/EkGmkp+M+kkKB6vGi74VXmc2ho6MDjUZD
      TU0NJpOJnJycQIu0yFaLAfkk7UBPF263xLRDid06Qkq6EbnJ+49du3YxOjrKH//4R6qqqla/
      QMYrPvUASYYn2Rq04YYNE0bm2YiOjubYsWO4XC5u3bpFaemLm1Vis9la/ZUMAF988QW1tbUo
      lUqCg4MDLc6WRlaALcjs7CylpaXU1dUxMiLv6LMeZAXYgqSnpxMbG0t6errsAl0nciBsC6JU
      Krl//z4Awy9YLlF/I/cAW5CGhoYtE2u5ajrL8ePHaet5YqrV/eE3DC0zk6Ply3MMTnnenzv1
      MZcb7mAzP+CX//a7JeXOXTj/5MA5RfOtNp/lk3uALcjRo0dRKBQoFApSU1MDLc6KDA8OoEvc
      QVp8CL/8x1/gDtOzUy8w/eghv/j4BPrUDPSKCcyTApLtPtZWK3/3o7cYnpQIl9ppGhPRhQtc
      PX+K63fayCmq4OSnJ4nUaznzm5MceusAHX0O7l0/hzM8lXe/e2RN8q2oAJLLyYTVRlhEJGpB
      9vQHkvvdQ/z8P897PZ9jiOMn7x7wo0TPxt5XXmOir4U/nDjNrBCFMTEWHBZG+rqIMmQTq9Uw
      0j/Ku++8TaPpE/Rlry1eGyqosLoFQlTQ1dNP2e5KFKoIyivKqSjKpKeiim/szKKj7w6zBPOD
      1w+uWT6vCnDt0nmGJmaJi9Mz9mgYgrUcfkUOugQK28wcjXd7Ai3Gmulrb+Fm+yCvHz3G7S9q
      GZoT2JFXhD4zl6G+3yME6zn4J5V8/PuTvH74W5yo/V+y/+woRYWF7IiLpGsC1K5pEmJe4sTp
      C+w98B1EewKNrQMUFGSAEEZR3g5CXOH8z5k63n7j0Jrk85ob1Ol00nWvFUmloN1s41D1NxCE
      1S0ml8slT4XYBBru9vDnP1tmn4PHlOcZ+Pd/eMePEi3PcrlBn2e8tmhBELhWX8/ItJOwUDWC
      sM+fcsnI+IUVH+lvvfUGdQ33SIyWfc0yvmEdG+LGrXuERukoKylcl9tx3NyHGJtC2Aa6blas
      6tSnJ5mPSGSor4PSMnm+iczaiYyJJ1zTTX5JId0PWhkZHSejKJ9bn9/CLboID1KSWVhI0/UH
      hEVo2BEfQe/gKElp2XS1fklCZgmOCTNTLjWKR51YoyYwxKjJysym5e4dJh8NEpmQid3Sx7wy
      lMqKtbXTFRWydGchowPdhGrj1/UjyMgAdD7sQgwSMPf2oItLQ6fTUZwVz4h1mtikTILUCjra
      HyKKasyDA4ihUWQlR2KZnGfQPIBeH0/hzkJmpjzBApvNBmIo+Vk6HnaOMDE8suxOpCuxogL0
      m83E6nQo5UGtzDoIi4hACWSkZ+B2iyQlJRIWFkxYWBhKdSihaiUd91two8ZoTMclSSQnJaHX
      60GScEpuIiIiiTUk8+DmLSLDQmhqbkYICvOUIYwdGXHEJiUiribM1/BqAvU/bKf1bju5u/YT
      FhKyrh9AZnWam5vR6XRcu3aN8PBwDh1amzvveSY7Pw+A9Kx8FibS67RPzhvmLcyXlWE0RAOQ
      sDDDPtZz/M2qPYtlq3SepbdPNk718NLuvT7J5rUHCIvUsmd/FYbkRBRu15JzbsmF1ToJwNjI
      IOO26eWqkFkD8/PzNDY2kp6ezvz8fKDF8S/q6MXG72+8KoA2Wk/r7ZvEJSXTdL1+ybnhQTN9
      A2ZcM2MMjDvo6Wpna8xMeX7ZtWsXeXl5WCwWeZWXH1nRC/TGG69x+pOPKK6oXvJ5fFIKtul2
      7LYxwnUG5oYmcbjdqORF8T5jMpmYm5tjZmaGy5cv8+qrry45L7lcXq704Ha7n4vF8S/UoviG
      a1dxq9T09fVA6ZN9swZ6uujr6yO2tIjhthZUoohaoQB5UbzPaDQaqqurGR4e5u7du09F3Vdz
      RCgUimeK1G82W21R/Iq/2KTFgj6tgPCvDYKTDOmL64J379JtnnTbiH37PJH2lJQUhoaGAizN
      9mFFBaiueR3r5Awo1+pcklkrbrcbm82G3W4nKytr9QsCiCRJjIyMEB8fz/T0NKGhoYEWyWe8
      KoC56y7nLjd4DjRRvHPssGzabCImkwmFQoHNZkOpVHLkyNrmtfuTCxcuEBQUxMDAAJOTk1RX
      VwdaJJ/xarB19/aji42noLCQxEiRs3Wf+1OubUdERAQ2m42ZmZnn3okQGRlJaWkpMzMzPHjw
      INDirAuvPUBl9QEcc3bMQyPk5BUQpgnyp1zbjvLycsrLywMtxjOh0Wiw2+3s27dvceyyVfGq
      ABOWRx77HxgbHSMsJdFvQm0n/vTnp1c8/7ufHPaTJM+OxWIhJSWFU6dOodPpqKysDLRIPuNV
      AaasEwwOj3kORA0GWQFkHpOWlkZUVBRHjhzZcn7/r7NiD9DT0+c5CI5kd9nONVfudru5cuUK
      drudlJQUcnNzV7/oBcJisXDhwgX6+/vJzc3l4MGDKBRbf8fgtLS0xfdNTU1bxnRbDq8KUFBW
      idt5kYtN93EqZnyq/Pbt2+zYsYPk5GTOnTuH0Wj0a7DG5XLR0tJCd3c3breb8vJykpOT/XZ/
      s9lMWVkZwcHBhIaG4nQ6EcWt71Lu6uoiOjqauro6EhO3tmWwYtju1p1O8gvzcM1P+VR5VlYW
      jY2NnDt3LiCRSoVCQVtbG5IkER4e7vepAgUFBQwMDFBSUoLBYPB743e73czNzTE3N8edO3c2
      zFzp6uqira2Nl19+mfHx8Q2pM1B4bZFNN26QmZdLYX4ehtQMnypfaHAqlYrpac8mGv40AZRK
      JW+++SY3b94kNTWVoCD/erLu37+P3W7n008/xWAwkJSU5Pce8P333+ell16iq6uLpKQktFrt
      smUlScJkMpGYmMjo6Cj79+/3Wm91dTV1dXV89tlnK5bbCnj9N1TTYxz/+ASV5eWgiSLDkLTm
      yu/du8crr7zCZ599RlxcHA6HA7VavS6B14IkSZw4cQKVSkVnZyfJycns2bNn2bINDQ309/eT
      mZlJUVHRhtxfEATy8/PJysqis7PT7/a/IAj89Kc/5dKlS+Tk5Hht/AA3b96kuLgYk8lEfHw8
      DofjqR7rTFPvkwNdLqE6aBqYhwHP5zVlz3eSruXwqgDFe1/m7+MSGR6zgajxqfKCggKmp6c5
      evQobW1tfm384OkB0tPTKSsrY25ujpaWFq9lXS4XNTU1mM1mTp06RU1Nzboj35mZmYvvA2Uq
      LJifExMTTE5Oek2mazQaMZlMaDQaxsbGlu2pzjT3LnPlE7aiAqw4Brh66QpR8QkkxOp9qjwk
      JOTxkjWYmprCtcqU3s2grKwMgNHRURISEryWy8vLQxRFUlNTqays3JBpHwtTw8fHx8nIyPD7
      VBKHw0FQUBATExMcOnRoxajt+Pg4NTU1KBQKgoKCXghv1bOwogIYM5K49sWXXGu+7VPlvb29
      OJ1OTp8+zdDQkN8bwMLGfXNzcyiVSpKSvJtxY2NjfPDBB9TW1vLRRx9tyICxvr4eu93O2bNn
      OXv2rN8fAKIoEhISQnZ2NpcuXWLnTu+u7P7+fiwWC1qtlrCwMBwOhx8lDRxeTaDmGzcIiYgi
      eMQ3DxB4ftTg4GC0Wi2SJC1rV/rC+Pg4DoeD+vp69uzZQ3T08svp5ufnaW5uxmw2ExUVxdTU
      FEajcdmy6enpfPvb36a1tZWysrINmdceExODyWQiPz+f0dHRgDxVKyoqANDpdIyMjHh9CJSU
      lHD9+vXFVWkvgrv2WfCqAKUlJYz0tXPzbheofHsabNaP2tzcjNvt5vDhw5w/f54DB5ZPCqtU
      Kunu7kav15OUlLTq/Y1GI5mZmTQ0NGxIisesrKyATm2WJIm6ujokSaKjo4O3337ba1mNRrM4
      r6enp2fbpLhc0Sd3pvb/MJaW0Xn3jpcSbm5crydCl7Rko+zmbgsTM4+VJiaLW8NOIIK+u57N
      HEoMUUSF+j4gTkxM5OrVq5w8eXLxCbccoiiu+KcvhyRJ67bX//ViBw8feU8U8BdVGaTHhvlc
      /1pQKBQkJiYSFBTktacET9S6sbERp9OJ2WymuLjYL/IFmhUV4NChA8zMz/FI5yXaJ9mZnVMS
      gWLJRtnN3Ra6R71Hj1OjNYQH+W5ijI+Pk5mZyfDwMFarldjY2CXnLz54xKUHo16vr8rWUZ29
      dGD/8OFDamtrMRgMdHV18d577/lsBq02nVmSXM8clFso5+ua4Orqarq7uxEEYcV7Lpioubm5
      REZGLv6Xa8HpdG65uUHe5wKZ2/jkVB0JCfEMW5Z/mknuIHZXVnCntQVJkbz41FzN1lWplOsK
      CM3OzuJ0Ojl48CBNTU1PzTFareEqlU/ff2Fs0NraSkVFxbpctqt9f6VS9czff6HcWtYEd49O
      f+0BFAm6SK50eFyxaboQ0nRLV3HpdDoOHz5MY2MjCQkJPv0/giC8OGuCO+/dJr14L5+f/A9+
      +N7fLFvG7Zqnrb2HkIgov26UnZmZSWpqKi6Xi5SUlNUveEYWxgDPQ3aF9dA9OsOlB49WKKFf
      VIBbfVas9q+M8SJ3MOCCgTZPD1qUHIk25MUdEHtVAGPxPhztD3n9zWNYRkdhmUiwSq0hJydn
      UwVcjq9uC2Sz2dZV12+v9dJrsXs9//1dKRhiXtzMeLf7rfSMeTdXDTEh21MBImLi2B0T509Z
      npn6+nrm5+cZHh6msLAw0OLIbGGeG4PN7XZjtVoZGhrCarWuWHZ6ehq73c6BAwcwm81+klDm
      RSTwmZQes5asCJs1BpDZfvw/KYVN3wwl4jAAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
